{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Switch = Switch;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theme = require(\"../../theme\");\n\nvar _ramda = require(\"ramda\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\app\\\\components\\\\switch\\\\switch.tsx\";\nvar THUMB_SIZE = 30;\nvar WIDTH = 56;\nvar MARGIN = 2;\nvar OFF_POSITION = -0.5;\nvar ON_POSITION = WIDTH - THUMB_SIZE - MARGIN;\nvar BORDER_RADIUS = THUMB_SIZE * 3 / 4;\nvar ON_COLOR = _theme.color.primary;\nvar OFF_COLOR = _theme.color.palette.offWhite;\nvar BORDER_ON_COLOR = ON_COLOR;\nvar BORDER_OFF_COLOR = \"rgba(0, 0, 0, 0.1)\";\nvar DURATION = 250;\nvar TRACK = {\n  height: THUMB_SIZE + MARGIN,\n  width: WIDTH,\n  borderRadius: BORDER_RADIUS,\n  borderWidth: MARGIN / 2,\n  backgroundColor: _theme.color.background\n};\nvar THUMB = {\n  position: \"absolute\",\n  width: THUMB_SIZE,\n  height: THUMB_SIZE,\n  borderColor: BORDER_OFF_COLOR,\n  borderRadius: THUMB_SIZE / 2,\n  borderWidth: MARGIN / 2,\n  backgroundColor: _theme.color.background,\n  shadowColor: BORDER_OFF_COLOR,\n  shadowOffset: {\n    width: 1,\n    height: 2\n  },\n  shadowOpacity: 1,\n  shadowRadius: 2,\n  elevation: 2\n};\n\nvar enhance = function enhance(style, newStyles) {\n  return (0, _ramda.mergeAll)((0, _ramda.flatten)([style, newStyles]));\n};\n\nvar makeAnimatedValue = function makeAnimatedValue(switchOn) {\n  return new _reactNative.Animated.Value(switchOn ? 1 : 0);\n};\n\nfunction Switch(props) {\n  var _React$useState = _react.default.useState(makeAnimatedValue(props.value)),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n      timer = _React$useState2[0];\n\n  var startAnimation = _react.default.useMemo(function () {\n    return function (newValue) {\n      var toValue = newValue ? 1 : 0;\n\n      var easing = _reactNative.Easing.out(_reactNative.Easing.circle);\n\n      _reactNative.Animated.timing(timer, {\n        toValue: toValue,\n        duration: DURATION,\n        easing: easing,\n        useNativeDriver: true\n      }).start();\n    };\n  }, [timer]);\n\n  var _React$useState3 = _react.default.useState(props.value),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      previousValue = _React$useState4[0],\n      setPreviousValue = _React$useState4[1];\n\n  _react.default.useEffect(function () {\n    if (props.value !== previousValue) {\n      startAnimation(props.value);\n      setPreviousValue(props.value);\n    }\n  }, [previousValue, props.value, startAnimation]);\n\n  var handlePress = _react.default.useMemo(function () {\n    return function () {\n      return props.onToggle && props.onToggle(!props.value);\n    };\n  }, [props]);\n\n  if (!timer) {\n    return null;\n  }\n\n  var translateX = timer.interpolate({\n    inputRange: [0, 1],\n    outputRange: [OFF_POSITION, ON_POSITION]\n  });\n  var style = enhance({}, props.style);\n  var trackStyle = TRACK;\n  trackStyle = enhance(trackStyle, {\n    backgroundColor: props.value ? ON_COLOR : OFF_COLOR,\n    borderColor: props.value ? BORDER_ON_COLOR : BORDER_OFF_COLOR\n  });\n  trackStyle = enhance(trackStyle, props.value ? props.trackOnStyle : props.trackOffStyle);\n  var thumbStyle = THUMB;\n  thumbStyle = enhance(thumbStyle, {\n    transform: [{\n      translateX: translateX\n    }]\n  });\n  thumbStyle = enhance(thumbStyle, props.value ? props.thumbOnStyle : props.thumbOffStyle);\n  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n    onPress: handlePress,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Animated.View, {\n    style: trackStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Animated.View, {\n    style: thumbStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/switch/switch.tsx"],"names":["THUMB_SIZE","WIDTH","MARGIN","OFF_POSITION","ON_POSITION","BORDER_RADIUS","ON_COLOR","color","primary","OFF_COLOR","palette","offWhite","BORDER_ON_COLOR","BORDER_OFF_COLOR","DURATION","TRACK","height","width","borderRadius","borderWidth","backgroundColor","background","THUMB","position","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","enhance","style","newStyles","makeAnimatedValue","switchOn","Animated","Value","Switch","props","React","useState","value","timer","startAnimation","useMemo","newValue","toValue","easing","Easing","out","circle","timing","duration","useNativeDriver","start","previousValue","setPreviousValue","useEffect","handlePress","onToggle","translateX","interpolate","inputRange","outputRange","trackStyle","trackOnStyle","trackOffStyle","thumbStyle","transform","thumbOnStyle","thumbOffStyle"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { ViewStyle, Animated, Easing, TouchableWithoutFeedback } from \"react-native\"\r\nimport { color } from \"../../theme\"\r\nimport { SwitchProps } from \"./switch.props\"\r\nimport { mergeAll, flatten } from \"ramda\"\r\n\r\n// dimensions\r\nconst THUMB_SIZE = 30\r\nconst WIDTH = 56\r\nconst MARGIN = 2\r\nconst OFF_POSITION = -0.5\r\nconst ON_POSITION = WIDTH - THUMB_SIZE - MARGIN\r\nconst BORDER_RADIUS = (THUMB_SIZE * 3) / 4\r\n\r\n// colors\r\nconst ON_COLOR = color.primary\r\nconst OFF_COLOR = color.palette.offWhite\r\nconst BORDER_ON_COLOR = ON_COLOR\r\nconst BORDER_OFF_COLOR = \"rgba(0, 0, 0, 0.1)\"\r\n\r\n// animation\r\nconst DURATION = 250\r\n\r\n// the track always has these props\r\nconst TRACK = {\r\n  height: THUMB_SIZE + MARGIN,\r\n  width: WIDTH,\r\n  borderRadius: BORDER_RADIUS,\r\n  borderWidth: MARGIN / 2,\r\n  backgroundColor: color.background,\r\n}\r\n\r\n// the thumb always has these props\r\nconst THUMB: ViewStyle = {\r\n  position: \"absolute\",\r\n  width: THUMB_SIZE,\r\n  height: THUMB_SIZE,\r\n  borderColor: BORDER_OFF_COLOR,\r\n  borderRadius: THUMB_SIZE / 2,\r\n  borderWidth: MARGIN / 2,\r\n  backgroundColor: color.background,\r\n  shadowColor: BORDER_OFF_COLOR,\r\n  shadowOffset: { width: 1, height: 2 },\r\n  shadowOpacity: 1,\r\n  shadowRadius: 2,\r\n  elevation: 2,\r\n}\r\n\r\nconst enhance = (style, newStyles): any => {\r\n  return mergeAll(flatten([style, newStyles]))\r\n}\r\n\r\nconst makeAnimatedValue = switchOn => new Animated.Value(switchOn ? 1 : 0)\r\n\r\nexport function Switch(props: SwitchProps) {\r\n  const [timer] = React.useState<Animated.Value>(makeAnimatedValue(props.value))\r\n  const startAnimation = React.useMemo(\r\n    () => (newValue: boolean) => {\r\n      const toValue = newValue ? 1 : 0\r\n      const easing = Easing.out(Easing.circle)\r\n      Animated.timing(timer, {\r\n        toValue,\r\n        duration: DURATION,\r\n        easing,\r\n        useNativeDriver: true,\r\n      }).start()\r\n    },\r\n    [timer],\r\n  )\r\n\r\n  const [previousValue, setPreviousValue] = React.useState<boolean>(props.value)\r\n  React.useEffect(() => {\r\n    if (props.value !== previousValue) {\r\n      startAnimation(props.value)\r\n      setPreviousValue(props.value)\r\n    }\r\n  }, [previousValue, props.value, startAnimation])\r\n\r\n  const handlePress = React.useMemo(() => () => props.onToggle && props.onToggle(!props.value), [props])\r\n\r\n  if (!timer) {\r\n    return null\r\n  }\r\n\r\n  const translateX = timer.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [OFF_POSITION, ON_POSITION],\r\n  })\r\n\r\n  const style = enhance({}, props.style)\r\n\r\n  let trackStyle = TRACK\r\n  trackStyle = enhance(trackStyle, {\r\n    backgroundColor: props.value ? ON_COLOR : OFF_COLOR,\r\n    borderColor: props.value ? BORDER_ON_COLOR : BORDER_OFF_COLOR,\r\n  })\r\n  trackStyle = enhance(trackStyle, props.value ? props.trackOnStyle : props.trackOffStyle)\r\n\r\n  let thumbStyle = THUMB\r\n  thumbStyle = enhance(thumbStyle, {\r\n    transform: [{ translateX }],\r\n  })\r\n  thumbStyle = enhance(thumbStyle, props.value ? props.thumbOnStyle : props.thumbOffStyle)\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={handlePress} style={style}>\r\n      <Animated.View style={trackStyle}>\r\n        <Animated.View style={thumbStyle} />\r\n      </Animated.View>\r\n    </TouchableWithoutFeedback>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}