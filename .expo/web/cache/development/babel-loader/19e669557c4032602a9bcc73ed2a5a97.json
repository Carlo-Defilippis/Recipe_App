{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.URLSearchParams = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _NativeBlobModule = _interopRequireDefault(require(\"./NativeBlobModule\"));\n\nvar _Symbol$iterator;\n\nvar Blob = require('./Blob');\n\nvar BLOB_URL_PREFIX = null;\n\nif (_NativeBlobModule.default && typeof _NativeBlobModule.default.getConstants().BLOB_URI_SCHEME === 'string') {\n  var constants = _NativeBlobModule.default.getConstants();\n\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n\n  if (typeof constants.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += \"//\" + constants.BLOB_URI_HOST + \"/\";\n  }\n}\n\n_Symbol$iterator = Symbol.iterator;\n\nvar URLSearchParams = function () {\n  function URLSearchParams(params) {\n    var _this = this;\n\n    (0, _classCallCheck2.default)(this, URLSearchParams);\n    this._searchParams = [];\n\n    if (typeof params === 'object') {\n      Object.keys(params).forEach(function (key) {\n        return _this.append(key, params[key]);\n      });\n    }\n  }\n\n  (0, _createClass2.default)(URLSearchParams, [{\n    key: \"append\",\n    value: function append(key, value) {\n      this._searchParams.push([key, value]);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this._searchParams[Symbol.iterator]();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this._searchParams.length === 0) {\n        return '';\n      }\n\n      var last = this._searchParams.length - 1;\n      return this._searchParams.reduce(function (acc, curr, index) {\n        return acc + curr.join('=') + (index === last ? '' : '&');\n      }, '');\n    }\n  }]);\n  return URLSearchParams;\n}();\n\nexports.URLSearchParams = URLSearchParams;\n\nfunction validateBaseUrl(url) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(url);\n}\n\nvar URL = function () {\n  (0, _createClass2.default)(URL, null, [{\n    key: \"createObjectURL\",\n    value: function createObjectURL(blob) {\n      if (BLOB_URL_PREFIX === null) {\n        throw new Error('Cannot create URL for blob!');\n      }\n\n      return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n    }\n  }, {\n    key: \"revokeObjectURL\",\n    value: function revokeObjectURL(url) {}\n  }]);\n\n  function URL(url, base) {\n    (0, _classCallCheck2.default)(this, URL);\n    this._searchParamsInstance = null;\n    var baseUrl = null;\n\n    if (!base || validateBaseUrl(url)) {\n      this._url = url;\n\n      if (!this._url.endsWith('/')) {\n        this._url += '/';\n      }\n    } else {\n      if (typeof base === 'string') {\n        baseUrl = base;\n\n        if (!validateBaseUrl(baseUrl)) {\n          throw new TypeError(\"Invalid base URL: \" + baseUrl);\n        }\n      } else if (typeof base === 'object') {\n        baseUrl = base.toString();\n      }\n\n      if (baseUrl.endsWith('/')) {\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n      }\n\n      if (!url.startsWith('/')) {\n        url = \"/\" + url;\n      }\n\n      if (baseUrl.endsWith(url)) {\n        url = '';\n      }\n\n      this._url = \"\" + baseUrl + url;\n    }\n  }\n\n  (0, _createClass2.default)(URL, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this._searchParamsInstance === null) {\n        return this._url;\n      }\n\n      var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n      return this._url + separator + this._searchParamsInstance.toString();\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"href\",\n    get: function get() {\n      return this.toString();\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"searchParams\",\n    get: function get() {\n      if (this._searchParamsInstance == null) {\n        this._searchParamsInstance = new URLSearchParams();\n      }\n\n      return this._searchParamsInstance;\n    }\n  }, {\n    key: \"username\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }]);\n  return URL;\n}();\n\nexports.URL = URL;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Blob/URL.js"],"names":["Blob","require","BLOB_URL_PREFIX","NativeBlobModule","getConstants","BLOB_URI_SCHEME","constants","BLOB_URI_HOST","Symbol","iterator","URLSearchParams","params","_searchParams","Object","keys","forEach","key","append","value","push","name","Error","length","last","reduce","acc","curr","index","join","validateBaseUrl","url","test","URL","blob","data","blobId","offset","size","base","_searchParamsInstance","baseUrl","_url","endsWith","TypeError","toString","slice","startsWith","separator","indexOf"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst Blob = require('./Blob');\n\nimport NativeBlobModule from './NativeBlobModule';\n\nlet BLOB_URL_PREFIX = null;\n\nif (\n  NativeBlobModule &&\n  typeof NativeBlobModule.getConstants().BLOB_URI_SCHEME === 'string'\n) {\n  const constants = NativeBlobModule.getConstants();\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n  if (typeof constants.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\n\n// Small subset from whatwg-url: https://github.com/jsdom/whatwg-url/tree/master/lib\n// The reference code bloat comes from Unicode issues with URLs, so those won't work here.\nexport class URLSearchParams {\n  _searchParams = [];\n\n  constructor(params: any) {\n    if (typeof params === 'object') {\n      Object.keys(params).forEach(key => this.append(key, params[key]));\n    }\n  }\n\n  append(key: string, value: string) {\n    this._searchParams.push([key, value]);\n  }\n\n  delete(name) {\n    throw new Error('not implemented');\n  }\n\n  get(name) {\n    throw new Error('not implemented');\n  }\n\n  getAll(name) {\n    throw new Error('not implemented');\n  }\n\n  has(name) {\n    throw new Error('not implemented');\n  }\n\n  set(name, value) {\n    throw new Error('not implemented');\n  }\n\n  sort() {\n    throw new Error('not implemented');\n  }\n\n  [Symbol.iterator]() {\n    return this._searchParams[Symbol.iterator]();\n  }\n\n  toString() {\n    if (this._searchParams.length === 0) {\n      return '';\n    }\n    const last = this._searchParams.length - 1;\n    return this._searchParams.reduce((acc, curr, index) => {\n      return acc + curr.join('=') + (index === last ? '' : '&');\n    }, '');\n  }\n}\n\nfunction validateBaseUrl(url: string) {\n  // from this MIT-licensed gist: https://gist.github.com/dperini/729294\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    url,\n  );\n}\n\nexport class URL {\n  _searchParamsInstance = null;\n\n  static createObjectURL(blob: Blob) {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n    return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${\n      blob.data.offset\n    }&size=${blob.size}`;\n  }\n\n  static revokeObjectURL(url: string) {\n    // Do nothing.\n  }\n\n  constructor(url: string, base: string) {\n    let baseUrl = null;\n    if (!base || validateBaseUrl(url)) {\n      this._url = url;\n      if (!this._url.endsWith('/')) {\n        this._url += '/';\n      }\n    } else {\n      if (typeof base === 'string') {\n        baseUrl = base;\n        if (!validateBaseUrl(baseUrl)) {\n          throw new TypeError(`Invalid base URL: ${baseUrl}`);\n        }\n      } else if (typeof base === 'object') {\n        baseUrl = base.toString();\n      }\n      if (baseUrl.endsWith('/')) {\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n      }\n      if (!url.startsWith('/')) {\n        url = `/${url}`;\n      }\n      if (baseUrl.endsWith(url)) {\n        url = '';\n      }\n      this._url = `${baseUrl}${url}`;\n    }\n  }\n\n  get hash() {\n    throw new Error('not implemented');\n  }\n\n  get host() {\n    throw new Error('not implemented');\n  }\n\n  get hostname() {\n    throw new Error('not implemented');\n  }\n\n  get href(): string {\n    return this.toString();\n  }\n\n  get origin() {\n    throw new Error('not implemented');\n  }\n\n  get password() {\n    throw new Error('not implemented');\n  }\n\n  get pathname() {\n    throw new Error('not implemented');\n  }\n\n  get port() {\n    throw new Error('not implemented');\n  }\n\n  get protocol() {\n    throw new Error('not implemented');\n  }\n\n  get search() {\n    throw new Error('not implemented');\n  }\n\n  get searchParams(): URLSearchParams {\n    if (this._searchParamsInstance == null) {\n      this._searchParamsInstance = new URLSearchParams();\n    }\n    return this._searchParamsInstance;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    if (this._searchParamsInstance === null) {\n      return this._url;\n    }\n    const separator = this._url.indexOf('?') > -1 ? '&' : '?';\n    return this._url + separator + this._searchParamsInstance.toString();\n  }\n\n  get username() {\n    throw new Error('not implemented');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}