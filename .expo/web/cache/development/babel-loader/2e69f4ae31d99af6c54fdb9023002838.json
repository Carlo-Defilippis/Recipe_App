{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.textPresets = exports.viewPresets = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _theme = require(\"../../theme\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar BASE_VIEW = {\n  paddingVertical: _theme.spacing[2],\n  paddingHorizontal: _theme.spacing[2],\n  borderRadius: 4,\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nvar BASE_TEXT = {\n  paddingHorizontal: _theme.spacing[3]\n};\nvar viewPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    backgroundColor: _theme.color.palette.orange\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    alignItems: \"flex-start\"\n  })\n};\nexports.viewPresets = viewPresets;\nvar textPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    fontSize: 9,\n    color: _theme.color.palette.white\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    color: _theme.color.text,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  })\n};\nexports.textPresets = textPresets;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/button/button.presets.ts"],"names":["BASE_VIEW","paddingVertical","spacing","paddingHorizontal","borderRadius","justifyContent","alignItems","BASE_TEXT","viewPresets","primary","backgroundColor","color","palette","orange","link","textPresets","fontSize","white","text"],"mappings":";;;;;;;;;AACA;;;;;;AAKA,IAAMA,SAAoB,GAAG;AAC3BC,EAAAA,eAAe,EAAEC,eAAQ,CAAR,CADU;AAE3BC,EAAAA,iBAAiB,EAAED,eAAQ,CAAR,CAFQ;AAG3BE,EAAAA,YAAY,EAAE,CAHa;AAI3BC,EAAAA,cAAc,EAAE,QAJW;AAK3BC,EAAAA,UAAU,EAAE;AALe,CAA7B;AAQA,IAAMC,SAAoB,GAAG;AAC3BJ,EAAAA,iBAAiB,EAAED,eAAQ,CAAR;AADQ,CAA7B;AASO,IAAMM,WAAW,GAAG;AAIzBC,EAAAA,OAAO,kCAAOT,SAAP;AAAkBU,IAAAA,eAAe,EAAEC,aAAMC,OAAN,CAAcC;AAAjD,IAJkB;AASzBC,EAAAA,IAAI,kCACCd,SADD;AAEFG,IAAAA,iBAAiB,EAAE,CAFjB;AAGFF,IAAAA,eAAe,EAAE,CAHf;AAIFK,IAAAA,UAAU,EAAE;AAJV;AATqB,CAApB;;AAiBA,IAAMS,WAAW,GAAG;AACzBN,EAAAA,OAAO,kCAAOF,SAAP;AAAkBS,IAAAA,QAAQ,EAAE,CAA5B;AAA+BL,IAAAA,KAAK,EAAEA,aAAMC,OAAN,CAAcK;AAApD,IADkB;AAEzBH,EAAAA,IAAI,kCACCP,SADD;AAEFI,IAAAA,KAAK,EAAEA,aAAMO,IAFX;AAGFf,IAAAA,iBAAiB,EAAE,CAHjB;AAIFF,IAAAA,eAAe,EAAE;AAJf;AAFqB,CAApB","sourcesContent":["import { ViewStyle, TextStyle } from \"react-native\"\r\nimport { color, spacing } from \"../../theme\"\r\n\r\n/**\r\n * All text will start off looking like this.\r\n */\r\nconst BASE_VIEW: ViewStyle = {\r\n  paddingVertical: spacing[2],\r\n  paddingHorizontal: spacing[2],\r\n  borderRadius: 4,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n}\r\n\r\nconst BASE_TEXT: TextStyle = {\r\n  paddingHorizontal: spacing[3],\r\n}\r\n\r\n/**\r\n * All the variations of text styling within the app.\r\n *\r\n * You want to customize these to whatever you need in your app.\r\n */\r\nexport const viewPresets = {\r\n  /**\r\n   * A smaller piece of secondard information.\r\n   */\r\n  primary: { ...BASE_VIEW, backgroundColor: color.palette.orange } as ViewStyle,\r\n\r\n  /**\r\n   * A button without extras.\r\n   */\r\n  link: {\r\n    ...BASE_VIEW,\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n    alignItems: \"flex-start\",\r\n  } as ViewStyle,\r\n}\r\n\r\nexport const textPresets = {\r\n  primary: { ...BASE_TEXT, fontSize: 9, color: color.palette.white } as TextStyle,\r\n  link: {\r\n    ...BASE_TEXT,\r\n    color: color.text,\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n  } as TextStyle,\r\n}\r\n\r\n/**\r\n * A list of preset names.\r\n */\r\nexport type ButtonPresetNames = keyof typeof viewPresets\r\n"]},"metadata":{},"sourceType":"script"}