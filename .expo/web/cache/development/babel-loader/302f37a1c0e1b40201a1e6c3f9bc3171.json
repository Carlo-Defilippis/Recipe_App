{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedValue = require('./AnimatedValue');\n\nvar AnimatedWithChildren = require('./AnimatedWithChildren');\n\nvar invariant = require('invariant');\n\nvar _uniqueId = 1;\n\nvar AnimatedValueXY = function (_AnimatedWithChildren) {\n  _inherits(AnimatedValueXY, _AnimatedWithChildren);\n\n  var _super = _createSuper(AnimatedValueXY);\n\n  function AnimatedValueXY(valueIn) {\n    var _this;\n\n    _classCallCheck(this, AnimatedValueXY);\n\n    _this = _super.call(this);\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    };\n\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      _this.x = new AnimatedValue(value.x);\n      _this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      _this.x = value.x;\n      _this.y = value.y;\n    }\n\n    _this._listeners = {};\n    return _this;\n  }\n\n  _createClass(AnimatedValueXY, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.x.setValue(value.x);\n      this.y.setValue(value.y);\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.x.setOffset(offset.x);\n      this.y.setOffset(offset.y);\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this.x.flattenOffset();\n      this.y.flattenOffset();\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this.x.extractOffset();\n      this.y.extractOffset();\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return {\n        x: this.x.__getValue(),\n        y: this.y.__getValue()\n      };\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.x.resetAnimation();\n      this.y.resetAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.x.stopAnimation();\n      this.y.stopAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var _this2 = this;\n\n      var id = String(_uniqueId++);\n\n      var jointCallback = function jointCallback(_ref) {\n        var number = _ref.value;\n        callback(_this2.__getValue());\n      };\n\n      this._listeners[id] = {\n        x: this.x.addListener(jointCallback),\n        y: this.y.addListener(jointCallback)\n      };\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      this.x.removeListener(this._listeners[id].x);\n      this.y.removeListener(this._listeners[id].y);\n      delete this._listeners[id];\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this.x.removeAllListeners();\n      this.y.removeAllListeners();\n      this._listeners = {};\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout() {\n      return {\n        left: this.x,\n        top: this.y\n      };\n    }\n  }, {\n    key: \"getTranslateTransform\",\n    value: function getTranslateTransform() {\n      return [{\n        translateX: this.x\n      }, {\n        translateY: this.y\n      }];\n    }\n  }]);\n\n  return AnimatedValueXY;\n}(AnimatedWithChildren);\n\nmodule.exports = AnimatedValueXY;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedValueXY.js"],"names":["AnimatedValue","require","AnimatedWithChildren","invariant","_uniqueId","AnimatedValueXY","valueIn","value","x","y","_listeners","setValue","offset","setOffset","flattenOffset","extractOffset","__getValue","callback","resetAnimation","stopAnimation","id","String","jointCallback","number","addListener","removeListener","removeAllListeners","left","top","translateX","translateY","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nconst invariant = require('invariant');\n\ntype ValueXYListenerCallback = (value: {\n  x: number,\n  y: number,\n  ...\n}) => mixed;\n\nlet _uniqueId = 1;\n\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy.html\n */\nclass AnimatedValueXY extends AnimatedWithChildren {\n  x: AnimatedValue;\n  y: AnimatedValue;\n  _listeners: {\n    [key: string]: {\n      x: string,\n      y: string,\n      ...\n    },\n    ...,\n  };\n\n  constructor(\n    valueIn?: ?{\n      +x: number | AnimatedValue,\n      +y: number | AnimatedValue,\n      ...\n    },\n  ) {\n    super();\n    const value: any = valueIn || {x: 0, y: 0}; // @flowfixme: shouldn't need `: any`\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(\n        value.x instanceof AnimatedValue && value.y instanceof AnimatedValue,\n        'AnimatedValueXY must be initialized with an object of numbers or ' +\n          'AnimatedValues.',\n      );\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setvalue\n   */\n  setValue(value: {x: number, y: number, ...}) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setoffset\n   */\n  setOffset(offset: {x: number, y: number, ...}) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#flattenoffset\n   */\n  flattenOffset(): void {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#extractoffset\n   */\n  extractOffset(): void {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue(): {\n    x: number,\n    y: number,\n    ...\n  } {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue(),\n    };\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#resetanimation\n   */\n  resetAnimation(\n    callback?: (value: {\n      x: number,\n      y: number,\n      ...\n    }) => void,\n  ): void {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#stopanimation\n   */\n  stopAnimation(\n    callback?: (value: {\n      x: number,\n      y: number,\n      ...\n    }) => void,\n  ): void {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#addlistener\n   */\n  addListener(callback: ValueXYListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removelistener\n   */\n  removeListener(id: string): void {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removealllisteners\n   */\n  removeAllListeners(): void {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#getlayout\n   */\n  getLayout(): {[key: string]: AnimatedValue, ...} {\n    return {\n      left: this.x,\n      top: this.y,\n    };\n  }\n\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#gettranslatetransform\n   */\n  getTranslateTransform(): Array<{[key: string]: AnimatedValue, ...}> {\n    return [{translateX: this.x}, {translateY: this.y}];\n  }\n}\n\nmodule.exports = AnimatedValueXY;\n"]},"metadata":{},"sourceType":"script"}