{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _ReactNativeViewViewConfig = _interopRequireDefault(require(\"../../Components/View/ReactNativeViewViewConfig\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar RCTSinglelineTextInputViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture'\n      }\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture'\n      }\n    },\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture'\n      }\n    }\n  },\n  directEventTypes: {},\n  validAttributes: _objectSpread(_objectSpread({}, _ReactNativeViewViewConfig.default.validAttributes), {}, {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    textShadowOffset: {\n      diff: require('../../Utilities/differ/sizesDiffer')\n    },\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor')\n    },\n    color: {\n      process: require('../../StyleSheet/processColor')\n    },\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor')\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor')\n    },\n    onSelectionChange: true,\n    clearButtonMode: true,\n    onContentSizeChange: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    onChange: true,\n    scrollEnabled: true,\n    selectionColor: {\n      process: require('../../StyleSheet/processColor')\n    },\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    onTextInput: true,\n    placeholder: true,\n    autoCorrect: true,\n    onScroll: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true\n  })\n};\nmodule.exports = RCTSinglelineTextInputViewConfig;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Components/TextInput/RCTSinglelineTextInputViewConfig.js"],"names":["RCTSinglelineTextInputViewConfig","uiViewClassName","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topChange","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTouchCancel","topTouchEnd","topTouchMove","directEventTypes","validAttributes","ReactNativeViewViewConfig","fontSize","fontWeight","fontVariant","textShadowOffset","diff","require","allowFontScaling","fontStyle","textTransform","textAlign","fontFamily","lineHeight","isHighlighted","writingDirection","textDecorationLine","textShadowRadius","letterSpacing","textDecorationStyle","textDecorationColor","process","color","maxFontSizeMultiplier","textShadowColor","editable","inputAccessoryViewID","caretHidden","enablesReturnKeyAutomatically","placeholderTextColor","onSelectionChange","clearButtonMode","onContentSizeChange","keyboardType","selection","returnKeyType","blurOnSubmit","mostRecentEventCount","onChange","scrollEnabled","selectionColor","contextMenuHidden","secureTextEntry","onTextInput","placeholder","autoCorrect","onScroll","multiline","textContentType","maxLength","autoCapitalize","keyboardAppearance","passwordRules","spellCheck","selectTextOnFocus","text","clearTextOnFocus","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport ReactNativeViewViewConfig from '../../Components/View/ReactNativeViewViewConfig';\nimport type {ReactNativeBaseComponentViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\nconst RCTSinglelineTextInputViewConfig = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {},\n  validAttributes: {\n    ...ReactNativeViewViewConfig.validAttributes,\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {process: require('../../StyleSheet/processColor')},\n    color: {process: require('../../StyleSheet/processColor')},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {process: require('../../StyleSheet/processColor')},\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {process: require('../../StyleSheet/processColor')},\n    onSelectionChange: true,\n    clearButtonMode: true,\n    onContentSizeChange: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    onChange: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor')},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    onTextInput: true,\n    placeholder: true,\n    autoCorrect: true,\n    onScroll: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n  },\n};\n\nmodule.exports = (RCTSinglelineTextInputViewConfig: ReactNativeBaseComponentViewConfig<>);\n"]},"metadata":{},"sourceType":"script"}