{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\n\nif (__DEV__) {\n  if (!global.RN$Bridgeless) {\n    if (!global.__RCTProfileIsProfiling) {\n      require('./setUpReactDevTools');\n\n      var JSInspector = require('../JSInspector/JSInspector');\n\n      JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\n    }\n\n    var isLikelyARealBrowser = global.navigator != null && global.navigator.appName === 'Netscape';\n\n    if (!_Platform.default.isTesting) {\n      var HMRClient = require('../Utilities/HMRClient');\n\n      if (console._isPolyfilled) {\n        ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(function (level) {\n          var originalFunction = console[level];\n\n          console[level] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            HMRClient.log(level, args);\n            originalFunction.apply(console, args);\n          };\n        });\n      } else {\n        HMRClient.log('log', [\"JavaScript logs will appear in your \" + (isLikelyARealBrowser ? 'browser' : 'environment') + \" console\"]);\n      }\n    }\n\n    require('./setUpReactRefresh');\n  }\n}","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js"],"names":["__DEV__","global","RN$Bridgeless","__RCTProfileIsProfiling","require","JSInspector","registerAgent","isLikelyARealBrowser","navigator","appName","Platform","isTesting","HMRClient","console","_isPolyfilled","forEach","level","originalFunction","args","log","apply"],"mappings":"AAUA;;;;AAEA;;AAQA,IAAIA,OAAJ,EAAa;AAEX,MAAI,CAACC,MAAM,CAACC,aAAZ,EAA2B;AACzB,QAAI,CAACD,MAAM,CAACE,uBAAZ,EAAqC;AACnCC,MAAAA,OAAO,CAAC,sBAAD,CAAP;;AAGA,UAAMC,WAAW,GAAGD,OAAO,CAAC,4BAAD,CAA3B;;AACAC,MAAAA,WAAW,CAACC,aAAZ,CAA0BF,OAAO,CAAC,6BAAD,CAAjC;AACD;;AAKD,QAAMG,oBAAoB,GACxBN,MAAM,CAACO,SAAP,IAAoB,IAApB,IAUAP,MAAM,CAACO,SAAP,CAAiBC,OAAjB,KAA6B,UAX/B;;AAaA,QAAI,CAACC,kBAASC,SAAd,EAAyB;AACvB,UAAMC,SAAS,GAAGR,OAAO,CAAC,wBAAD,CAAzB;;AAEA,UAAIS,OAAO,CAACC,aAAZ,EAA2B;AAEzB,SACE,OADF,EAEE,MAFF,EAGE,MAHF,EAIE,OAJF,EAKE,KALF,EAME,OANF,EAOE,gBAPF,EAQE,UARF,EASE,OATF,EAUEC,OAVF,CAUU,UAAAC,KAAK,EAAI;AACjB,cAAMC,gBAAgB,GAAGJ,OAAO,CAACG,KAAD,CAAhC;;AACAH,UAAAA,OAAO,CAACG,KAAD,CAAP,GAAiB,YAAkB;AAAA,8CAANE,IAAM;AAANA,cAAAA,IAAM;AAAA;;AACjCN,YAAAA,SAAS,CAACO,GAAV,CAAcH,KAAd,EAAqBE,IAArB;AACAD,YAAAA,gBAAgB,CAACG,KAAjB,CAAuBP,OAAvB,EAAgCK,IAAhC;AACD,WAHD;AAID,SAhBD;AAiBD,OAnBD,MAmBO;AAILN,QAAAA,SAAS,CAACO,GAAV,CAAc,KAAd,EAAqB,2CAEjBZ,oBAAoB,GAAG,SAAH,GAAe,aAFlB,eAArB;AAKD;AACF;;AAEDH,IAAAA,OAAO,CAAC,qBAAD,CAAP;AACD;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport Platform from '../Utilities/Platform';\n\ndeclare var console: typeof console & {_isPolyfilled: boolean, ...};\n\n/**\n * Sets up developer tools for React Native.\n * You can use this module directly, or just require InitializeCore.\n */\nif (__DEV__) {\n  // TODO (T45803484) Enable devtools for bridgeless RN\n  if (!global.RN$Bridgeless) {\n    if (!global.__RCTProfileIsProfiling) {\n      require('./setUpReactDevTools');\n\n      // Set up inspector\n      const JSInspector = require('../JSInspector/JSInspector');\n      JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\n    }\n\n    // Note we can't check if console is \"native\" because it would appear \"native\" in JSC and Hermes.\n    // We also can't check any properties that don't exist in the Chrome worker environment.\n    // So we check a navigator property that's set to a particular value (\"Netscape\") in all real browsers.\n    const isLikelyARealBrowser =\n      global.navigator != null &&\n      /*              _\n       *             | |\n       *   _ __   ___| |_ ___  ___ __ _ _ __   ___\n       *  | '_ \\ / _ \\ __/ __|/ __/ _` | '_ \\ / _ \\\n       *  | | | |  __/ |_\\__ \\ (_| (_| | |_) |  __/\n       *  |_| |_|\\___|\\__|___/\\___\\__,_| .__/ \\___|\n       *                               | |\n       *                               |_|\n       */\n      global.navigator.appName === 'Netscape'; // Any real browser\n\n    if (!Platform.isTesting) {\n      const HMRClient = require('../Utilities/HMRClient');\n\n      if (console._isPolyfilled) {\n        // We assume full control over the console and send JavaScript logs to Metro.\n        [\n          'trace',\n          'info',\n          'warn',\n          'error',\n          'log',\n          'group',\n          'groupCollapsed',\n          'groupEnd',\n          'debug',\n        ].forEach(level => {\n          const originalFunction = console[level];\n          console[level] = function(...args) {\n            HMRClient.log(level, args);\n            originalFunction.apply(console, args);\n          };\n        });\n      } else {\n        // We assume the environment has a real rich console (like Chrome), and don't hijack it to log to Metro.\n        // It's likely the developer is using rich console to debug anyway, and hijacking it would\n        // lose the filenames in console.log calls: https://github.com/facebook/react-native/issues/26788.\n        HMRClient.log('log', [\n          `JavaScript logs will appear in your ${\n            isLikelyARealBrowser ? 'browser' : 'environment'\n          } console`,\n        ]);\n      }\n    }\n\n    require('./setUpReactRefresh');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}