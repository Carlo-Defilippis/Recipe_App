{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\node_modules\\\\react-native\\\\Libraries\\\\Lists\\\\VirtualizedList.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Batchinator = require('../Interaction/Batchinator');\n\nvar FillRateHelper = require('./FillRateHelper');\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar ReactNative = require('../Renderer/shims/ReactNative');\n\nvar RefreshControl = require('../Components/RefreshControl/RefreshControl');\n\nvar ScrollView = require('../Components/ScrollView/ScrollView');\n\nvar StyleSheet = require('../StyleSheet/StyleSheet');\n\nvar View = require('../Components/View/View');\n\nvar ViewabilityHelper = require('./ViewabilityHelper');\n\nvar flattenStyle = require('../StyleSheet/flattenStyle');\n\nvar infoLog = require('../Utilities/infoLog');\n\nvar invariant = require('invariant');\n\nvar warning = require('fbjs/lib/warning');\n\nvar _require = require('./VirtualizeUtils'),\n    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\nvar VirtualizedList = function (_React$PureComponent) {\n  _inherits(VirtualizedList, _React$PureComponent);\n\n  var _super = _createSuper(VirtualizedList);\n\n  _createClass(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n      var frame = this._getFrameMetricsApprox(veryLast);\n\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props = this.props,\n          data = _this$props.data,\n          horizontal = _this$props.horizontal,\n          getItemCount = _this$props.getItemCount,\n          getItemLayout = _this$props.getItemLayout,\n          onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n      var animated = params.animated,\n          index = params.index,\n          viewOffset = params.viewOffset,\n          viewPosition = params.viewPosition;\n      invariant(index >= 0 && index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" but maximum is \" + (getItemCount(data) - 1));\n\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n\n      var frame = this._getFrameMetricsApprox(index);\n\n      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          getItem = _this$props2.getItem,\n          getItemCount = _this$props2.getItemCount;\n      var itemCount = getItemCount(data);\n\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n          offset = params.offset;\n\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.scrollTo(this.props.horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref.recordInteraction();\n      });\n\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return ReactNative.findNodeHandle(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedList: {\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: this.props.horizontal,\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo()\n        }\n      };\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      return this.context.virtualizedCell && this.context.virtualizedCell.cellKey || 'rootList';\n    }\n  }, {\n    key: \"_getListKey\",\n    value: function _getListKey() {\n      return this.props.listKey || this._getCellKey();\n    }\n  }, {\n    key: \"_getDebugInfo\",\n    value: function _getDebugInfo() {\n      return {\n        listKey: this._getListKey(),\n        cellKey: this._getCellKey(),\n        horizontal: !!this.props.horizontal,\n        parent: this.context.virtualizedList ? this.context.virtualizedList.debugInfo : null\n      };\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }]);\n\n  function VirtualizedList(_props, context) {\n    var _this;\n\n    _classCallCheck(this, VirtualizedList);\n\n    _this = _super.call(this, _props, context);\n\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.virtualizedList.getOutermostParentListRef();\n      } else {\n        return _assertThisInitialized(_this);\n      }\n    };\n\n    _this._getNestedChildState = function (key) {\n      var existingChildData = _this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    _this._registerAsNestedChild = function (childList) {\n      var childListsInCell = _this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      _this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = _this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      _this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    _this._averageCellLength = 0;\n    _this._cellKeysToChildListKeys = new Map();\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasDoneInitialScroll = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._nestedChildLists = new Map();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    _this._scrollRef = null;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n\n      if (_this._isNestedWithSameOrientation()) {\n        return React.createElement(View, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 14\n          }\n        }));\n      } else if (onRefresh) {\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');\n        return React.createElement(ScrollView, _extends({}, props, {\n          refreshControl: props.refreshControl == null ? React.createElement(RefreshControl, {\n            refreshing: props.refreshing,\n            onRefresh: onRefresh,\n            progressViewOffset: props.progressViewOffset,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1316,\n              columnNumber: 15\n            }\n          }) : props.refreshControl,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(ScrollView, _extends({}, props, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 14\n          }\n        }));\n      }\n    };\n\n    _this._onCellUnmount = function (cellKey) {\n      var curr = _this._frames[cellKey];\n\n      if (curr) {\n        _this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n\n      _this.props.onLayout && _this.props.onLayout(e);\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasDoneInitialScroll) {\n        _this.scrollToIndex({\n          animated: false,\n          index: _this.props.initialScrollIndex\n        });\n\n        _this._hasDoneInitialScroll = true;\n      }\n\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n\n      _this._scheduleCellsToRenderUpdate();\n\n      _this._maybeCallOnEndReached();\n    };\n\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - _this._scrollMetrics.offset;\n\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength\n      };\n\n      _this._updateViewableItems(_this.props.data);\n\n      if (!_this.props) {\n        return;\n      }\n\n      _this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n\n      _this._computeBlankness();\n\n      _this._scheduleCellsToRenderUpdate();\n    };\n\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n\n    _this._onScrollEndDrag = function (e) {\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n\n      _this._computeBlankness();\n\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n\n    _this._onMomentumScrollEnd = function (e) {\n      _this._scrollMetrics.velocity = 0;\n\n      _this._computeBlankness();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n\n    _this._updateCellsToRender = function () {\n      var _this$props3 = _this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n\n      var isVirtualizationDisabled = _this._isVirtualizationDisabled();\n\n      _this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      _this.setState(function (state) {\n        var newState;\n        var _this$_scrollMetrics = _this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          if (visibleLength > 0 && contentLength > 0) {\n            if (!_this.props.initialScrollIndex || _this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(_this.props, state, _this._getFrameMetricsApprox, _this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? _this.props.maxToRenderPerBatch : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && _this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = _this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && _this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = _this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    _this._createViewToken = function (index, isViewable) {\n      var _this$props4 = _this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem,\n          keyExtractor = _this$props4.keyExtractor;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: keyExtractor(item, index),\n        isViewable: isViewable\n      };\n    };\n\n    _this._getFrameMetricsApprox = function (index) {\n      var frame = _this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var getItemLayout = _this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n\n    _this._getFrameMetrics = function (index) {\n      var _this$props5 = _this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout,\n          keyExtractor = _this$props5.keyExtractor;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && _this._frames[keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n\n          if (__DEV__) {\n            var frameType = PropTypes.shape({\n              length: PropTypes.number.isRequired,\n              offset: PropTypes.number.isRequired,\n              index: PropTypes.number.isRequired\n            }).isRequired;\n            PropTypes.checkPropTypes({\n              frame: frameType\n            }, {\n              frame: frame\n            }, 'frame', 'VirtualizedList.getItemLayout');\n          }\n        }\n      }\n\n      return frame;\n    };\n\n    invariant(!_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(_props.windowSize > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),\n        onViewableItemsChanged: _this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: _this.props.initialScrollIndex || 0,\n      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1\n    };\n\n    if (_this._isNestedWithSameOrientation()) {\n      var storedState = _this.context.virtualizedList.getNestedChildState(_this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        _this.state = storedState;\n        _this._frames = storedState.frames;\n      }\n    }\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(VirtualizedList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.registerAsNestedChild({\n          cellKey: this._getCellKey(),\n          key: this._getListKey(),\n          ref: this,\n          parentDebugInfo: this.context.virtualizedList.debugInfo\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.virtualizedList.unregisterAsNestedChild({\n          key: this._getListKey(),\n          state: {\n            first: this.state.first,\n            last: this.state.last,\n            frames: this._frames\n          }\n        });\n      }\n\n      this._updateViewableItems(null);\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          CellRendererComponent = _this$props6.CellRendererComponent,\n          ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n          data = _this$props6.data,\n          getItem = _this$props6.getItem,\n          getItemCount = _this$props6.getItemCount,\n          horizontal = _this$props6.horizontal,\n          keyExtractor = _this$props6.keyExtractor;\n      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n\n      var _loop = function _loop(ii) {\n        var item = getItem(data, ii);\n        var key = keyExtractor(item, ii);\n\n        _this2._indicesToKeys.set(ii, key);\n\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n\n        cells.push(React.createElement(CellRenderer, {\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          cellKey: key,\n          fillRateHelper: _this2._fillRateHelper,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          key: key,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onLayout: function onLayout(e) {\n            return _this2._onCellLayout(e, key, ii);\n          },\n          onUnmount: _this2._onCellUnmount,\n          parentProps: _this2.props,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 9\n          }\n        }));\n        prevCellKey = key;\n      };\n\n      for (var ii = first; ii <= last; ii++) {\n        _loop(ii);\n      }\n    }\n  }, {\n    key: \"_isVirtualizationDisabled\",\n    value: function _isVirtualizationDisabled() {\n      return this.props.disableVirtualization || false;\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context.virtualizedList;\n      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (__DEV__) {\n        var flatStyles = flattenStyle(this.props.contentContainerStyle);\n        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n\n      var _this$props7 = this.props,\n          ListEmptyComponent = _this$props7.ListEmptyComponent,\n          ListFooterComponent = _this$props7.ListFooterComponent,\n          ListHeaderComponent = _this$props7.ListHeaderComponent;\n      var _this$props8 = this.props,\n          data = _this$props8.data,\n          horizontal = _this$props8.horizontal;\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n\n        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 9\n          }\n        });\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getCellKey() + '-header',\n          key: \"$header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutHeader,\n          style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 11\n          }\n        }, element)));\n      }\n\n      var itemCount = this.props.getItemCount(data);\n\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = !horizontal ? 'height' : 'width';\n        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;\n        var _this$state = this.state,\n            first = _this$state.first,\n            last = _this$state.last;\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n        var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n        if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n          var insertedStickySpacer = false;\n\n          if (stickyIndicesFromProps.size > 0) {\n            var stickyOffset = ListHeaderComponent ? 1 : 0;\n\n            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n              if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n                var stickyBlock = this._getFrameMetricsApprox(ii);\n\n                var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_lead\",\n                  style: _defineProperty({}, spacerKey, leadSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 17\n                  }\n                }));\n\n                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n                var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n                cells.push(React.createElement(View, {\n                  key: \"$sticky_trail\",\n                  style: _defineProperty({}, spacerKey, trailSpace),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 17\n                  }\n                }));\n                insertedStickySpacer = true;\n                break;\n              }\n            }\n          }\n\n          if (!insertedStickySpacer) {\n            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n            var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n            cells.push(React.createElement(View, {\n              key: \"$lead_spacer\",\n              style: _defineProperty({}, spacerKey, firstSpace),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 13\n              }\n            }));\n          }\n        }\n\n        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n\n        if (!isVirtualizationDisabled && last < itemCount - 1) {\n          var lastFrame = this._getFrameMetricsApprox(last);\n\n          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n          var endFrame = this._getFrameMetricsApprox(end);\n\n          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n          cells.push(React.createElement(View, {\n            key: \"$tail_spacer\",\n            style: _defineProperty({}, spacerKey, tailSpacerLength),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 11\n            }\n          }));\n        }\n      } else if (ListEmptyComponent) {\n        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.cloneElement(_element, {\n          key: '$empty',\n          onLayout: function onLayout(event) {\n            _this3._onLayoutEmpty(event);\n\n            if (_element.props.onLayout) {\n              _element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, _element.props.style)\n        }));\n      }\n\n      if (ListFooterComponent) {\n        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 9\n          }\n        });\n\n        cells.push(React.createElement(VirtualizedCellWrapper, {\n          cellKey: this._getFooterCellKey(),\n          key: \"$footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          onLayout: this._onLayoutFooter,\n          style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 11\n          }\n        }, _element2)));\n      }\n\n      var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: this.props.scrollEventThrottle,\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n      });\n\n      this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n      var innerRet = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n        ref: this._captureScrollRef\n      }, cells);\n      var ret = innerRet;\n\n      if (__DEV__) {\n        ret = React.createElement(ScrollView.Context.Consumer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 9\n          }\n        }, function (scrollContext) {\n          if (scrollContext != null && !scrollContext.horizontal === !_this3.props.horizontal && !_this3._hasWarned.nesting && _this3.context.virtualizedList == null) {\n            console.warn('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation - use another VirtualizedList-backed container instead.');\n            _this3._hasWarned.nesting = true;\n          }\n\n          return innerRet;\n        });\n      }\n\n      if (this.props.debug) {\n        return React.createElement(View, {\n          style: styles.debug,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 9\n          }\n        }, ret, this._renderDebugOverlay());\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props9 = this.props,\n          data = _this$props9.data,\n          extraData = _this$props9.extraData;\n\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n\n      var hiPriInProgress = this._hiPriInProgress;\n\n      this._scheduleCellsToRenderUpdate();\n\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellLayout\",\n    value: function _onCellLayout(e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n\n      this._triggerRemeasureForChildListsInCell(cellKey);\n\n      this._computeBlankness();\n\n      this._updateViewableItems(this.props.data);\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n      if (childListKeys) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n          var childKey = _step2.value;\n\n          var childList = this._nestedChildLists.get(childKey);\n\n          childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n        }\n      }\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n\n        this._scrollRef.measureLayout(this.context.virtualizedList.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.virtualizedList.getScrollMetrics());\n\n          _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          _this4._scrollMetrics.offset = scrollMetrics.offset;\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var _this5 = this;\n\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this._getFrameMetricsApprox(ii);\n\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n\n      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n      var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 7\n        }\n      }, framesInLayout.map(function (f, ii) {\n        return React.createElement(View, {\n          key: 'f' + ii,\n          style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n            top: f.offset * normalize,\n            height: f.length * normalize\n          }],\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 11\n          }\n        });\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n          top: windowTop * normalize,\n          height: windowLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n          top: visTop * normalize,\n          height: visLen * normalize\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !this.props.horizontal ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !this.props.horizontal ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEndReached\",\n    value: function _maybeCallOnEndReached() {\n      var _this$props10 = this.props,\n          data = _this$props10.data,\n          getItemCount = _this$props10.getItemCount,\n          onEndReached = _this$props10.onEndReached,\n          onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics2.contentLength,\n          visibleLength = _this$_scrollMetrics2.visibleLength,\n          offset = _this$_scrollMetrics2.offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      var threshold = onEndReachedThreshold ? onEndReachedThreshold * visibleLength : 0;\n\n      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (distanceFromEnd > threshold) {\n        this._sentEndForContentLength = 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state2 = this.state,\n          first = _this$state2.first,\n          last = _this$state2.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n          offset = _this$_scrollMetrics3.offset,\n          visibleLength = _this$_scrollMetrics3.visibleLength,\n          velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;\n\n      if (first > 0) {\n        var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n        hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n      }\n\n      if (last < itemCount - 1) {\n        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n        hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n      }\n\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n\n        this._updateCellsToRender();\n\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(data) {\n      var _this6 = this;\n\n      var getItemCount = this.props.getItemCount;\n\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, _this6.state);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var data = newProps.data,\n          getItemCount = newProps.getItemCount,\n          maxToRenderPerBatch = newProps.maxToRenderPerBatch;\n      return {\n        first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n        last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n      };\n    }\n  }]);\n\n  return VirtualizedList;\n}(React.PureComponent);\n\nVirtualizedList.defaultProps = {\n  disableVirtualization: false,\n  horizontal: false,\n  initialNumToRender: 10,\n  keyExtractor: function keyExtractor(item, index) {\n    if (item.key != null) {\n      return item.key;\n    }\n\n    if (item.id != null) {\n      return item.id;\n    }\n\n    _usedIndexForKey = true;\n\n    if (item.type && item.type.displayName) {\n      _keylessItemComponentName = item.type.displayName;\n    }\n\n    return String(index);\n  },\n  maxToRenderPerBatch: 10,\n  onEndReachedThreshold: 2,\n  scrollEventThrottle: 50,\n  updateCellsBatchingPeriod: 50,\n  windowSize: 21\n};\nVirtualizedList.contextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  }),\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func,\n    debugInfo: PropTypes.shape({\n      listKey: PropTypes.string,\n      cellKey: PropTypes.string\n    })\n  })\n};\nVirtualizedList.childContextTypes = {\n  virtualizedList: PropTypes.shape({\n    getScrollMetrics: PropTypes.func,\n    horizontal: PropTypes.bool,\n    getOutermostParentListRef: PropTypes.func,\n    getNestedChildState: PropTypes.func,\n    registerAsNestedChild: PropTypes.func,\n    unregisterAsNestedChild: PropTypes.func\n  })\n};\n\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n\n  var _super2 = _createSuper(CellRenderer);\n\n  function CellRenderer() {\n    var _this7;\n\n    _classCallCheck(this, CellRenderer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this7 = _super2.call.apply(_super2, [this].concat(args));\n    _this7.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this7.props.item\n      }\n    };\n    _this7._separators = {\n      highlight: function highlight() {\n        var _this7$props = _this7.props,\n            cellKey = _this7$props.cellKey,\n            prevCellKey = _this7$props.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this7$props2 = _this7.props,\n            cellKey = _this7$props2.cellKey,\n            prevCellKey = _this7$props2.prevCellKey;\n\n        _this7.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this7$props3 = _this7.props,\n            cellKey = _this7$props3.cellKey,\n            prevCellKey = _this7$props3.prevCellKey;\n\n        _this7.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    return _this7;\n  }\n\n  _createClass(CellRenderer, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n      }\n\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props11 = this.props,\n          CellRendererComponent = _this$props11.CellRendererComponent,\n          ItemSeparatorComponent = _this$props11.ItemSeparatorComponent,\n          fillRateHelper = _this$props11.fillRateHelper,\n          horizontal = _this$props11.horizontal,\n          item = _this$props11.item,\n          index = _this$props11.index,\n          inversionStyle = _this$props11.inversionStyle,\n          parentProps = _this$props11.parentProps;\n      var renderItem = parentProps.renderItem,\n          getItemLayout = parentProps.getItemLayout,\n          ListItemComponent = parentProps.ListItemComponent;\n\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, _extends({}, this.state.separatorProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2106,\n          columnNumber: 7\n        }\n      }));\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n\n      if (!CellRendererComponent) {\n        return React.createElement(View, {\n          style: cellStyle,\n          onLayout: onLayout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2120,\n            columnNumber: 9\n          }\n        }, element, itemSeparator);\n      }\n\n      return React.createElement(CellRendererComponent, _extends({}, this.props, {\n        style: cellStyle,\n        onLayout: onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2127,\n          columnNumber: 7\n        }\n      }), element, itemSeparator);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n  }]);\n\n  return CellRenderer;\n}(React.Component);\n\nCellRenderer.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nvar VirtualizedCellWrapper = function (_React$Component2) {\n  _inherits(VirtualizedCellWrapper, _React$Component2);\n\n  var _super3 = _createSuper(VirtualizedCellWrapper);\n\n  function VirtualizedCellWrapper() {\n    _classCallCheck(this, VirtualizedCellWrapper);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(VirtualizedCellWrapper, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        virtualizedCell: {\n          cellKey: this.props.cellKey\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return VirtualizedCellWrapper;\n}(React.Component);\n\nVirtualizedCellWrapper.childContextTypes = {\n  virtualizedCell: PropTypes.shape({\n    cellKey: PropTypes.string\n  })\n};\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Lists/VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","debugInfo","_getDebugInfo","context","virtualizedCell","cellKey","listKey","_getCellKey","_getListKey","parent","_hasMore","_isNestedWithSameOrientation","key","existingChildData","get","state","childListsInCell","_cellKeysToChildListKeys","Set","add","set","console","error","describeNestedLists","_hasInteracted","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","Map","_frames","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","keyExtractor","_getFrameMetrics","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","frames","parentDebugInfo","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","innerRet","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","VirtualizedCellWrapper","children","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\ntype DefaultProps = {|\n  disableVirtualization: boolean,\n  horizontal: boolean,\n  initialNumToRender: number,\n  keyExtractor: (item: Item, index: number) => string,\n  maxToRenderPerBatch: number,\n  onEndReachedThreshold: number,\n  scrollEventThrottle: number,\n  updateCellsBatchingPeriod: number,\n  windowSize: number,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n  ...\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame, ...},\n  ...\n};\n\ntype State = {\n  first: number,\n  last: number,\n  ...\n};\n\n// Data propagated through nested lists (regardless of orientation) that is\n// useful for producing diagnostics for usage errors involving nesting (e.g\n// missing/duplicate keys).\ntype ListDebugInfo = {\n  cellKey: string,\n  listKey: string,\n  parent: ?ListDebugInfo,\n  // We include all ancestors regardless of orientation, so this is not always\n  // identical to the child's orientation.\n  horizontal: boolean,\n};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} but maximum is ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps: DefaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes:\n    | any\n    | {|\n        virtualizedCell: {|\n          cellKey: React$PropType$Primitive<string>,\n        |},\n        virtualizedList: {|\n          getScrollMetrics: React$PropType$Primitive<Function>,\n          horizontal: React$PropType$Primitive<boolean>,\n          getOutermostParentListRef: React$PropType$Primitive<Function>,\n          getNestedChildState: React$PropType$Primitive<Function>,\n          registerAsNestedChild: React$PropType$Primitive<Function>,\n          unregisterAsNestedChild: React$PropType$Primitive<Function>,\n          debugInfo: {|\n            listKey: React$PropType$Primitive<string>,\n            cellKey: React$PropType$Primitive<string>,\n          |},\n        |},\n      |} = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n      debugInfo: PropTypes.shape({\n        listKey: PropTypes.string,\n        cellKey: PropTypes.string,\n      }),\n    }),\n  };\n\n  static childContextTypes:\n    | any\n    | {|\n        getScrollMetrics: React$PropType$Primitive<Function>,\n        horizontal: React$PropType$Primitive<boolean>,\n        getOutermostParentListRef: React$PropType$Primitive<Function>,\n        getNestedChildState: React$PropType$Primitive<Function>,\n        registerAsNestedChild: React$PropType$Primitive<Function>,\n        unregisterAsNestedChild: React$PropType$Primitive<Function>,\n      |} = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext(): {|\n    virtualizedList: {\n      getScrollMetrics: () => {\n        contentLength: number,\n        dOffset: number,\n        dt: number,\n        offset: number,\n        timestamp: number,\n        velocity: number,\n        visibleLength: number,\n        ...\n      },\n      horizontal: ?boolean,\n      getOutermostParentListRef: Function,\n      getNestedChildState: string => ?ChildListState,\n      registerAsNestedChild: ({\n        cellKey: string,\n        key: string,\n        ref: VirtualizedList,\n        parentDebugInfo: ListDebugInfo,\n        ...\n      }) => ?ChildListState,\n      unregisterAsNestedChild: ({\n        key: string,\n        state: ChildListState,\n        ...\n      }) => void,\n      debugInfo: ListDebugInfo,\n      ...\n    },\n  |} {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo(),\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: !!this.props.horizontal,\n      parent: this.context.virtualizedList\n        ? this.context.virtualizedList.debugInfo\n        : null,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      // $FlowFixMe\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this._getListKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.virtualizedList.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n                 * suppresses an error found when Flow v0.111 was deployed. To\n                 * see the error, delete this comment and run Flow. */\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment\n             * suppresses an error found when Flow v0.111 was deployed. To see\n             * the error, delete this comment and run Flow. */\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal === !this.props.horizontal &&\n              !this._hasWarned.nesting &&\n              this.context.virtualizedList == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.warn(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation - use another VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.111 was deployed. To see the error,\n           * delete this comment and run Flow. */\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold = onEndReachedThreshold\n      ? onEndReachedThreshold * visibleLength\n      : 0;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<*>,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe(>=0.108.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.108 was deployed. To see the error, delete\n       * this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n  ...\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]},"metadata":{},"sourceType":"script"}