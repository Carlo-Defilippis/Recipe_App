{"ast":null,"code":"'use strict';\n\nvar ExceptionsManager = require('./ExceptionsManager');\n\nExceptionsManager.installConsoleErrorReporter();\n\nif (!global.__fbDisableExceptionsManager) {\n  var handleError = function handleError(e, isFatal) {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      console.log('Failed to print error: ', ee.message);\n      throw e;\n    }\n  };\n\n  var ErrorUtils = require('../vendor/core/ErrorUtils');\n\n  ErrorUtils.setGlobalHandler(handleError);\n}","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Core/setUpErrorHandling.js"],"names":["ExceptionsManager","require","installConsoleErrorReporter","global","__fbDisableExceptionsManager","handleError","e","isFatal","handleException","ee","console","log","message","ErrorUtils","setGlobalHandler"],"mappings":"AAUA;;AAMA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACAD,iBAAiB,CAACE,2BAAlB;;AAGA,IAAI,CAACC,MAAM,CAACC,4BAAZ,EAA0C;AACxC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAIC,OAAJ,EAAgB;AAClC,QAAI;AACFP,MAAAA,iBAAiB,CAACQ,eAAlB,CAAkCF,CAAlC,EAAqCC,OAArC;AACD,KAFD,CAEE,OAAOE,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,EAAE,CAACG,OAA1C;AACA,YAAMN,CAAN;AACD;AACF,GAPD;;AASA,MAAMO,UAAU,GAAGZ,OAAO,CAAC,2BAAD,CAA1B;;AACAY,EAAAA,UAAU,CAACC,gBAAX,CAA4BT,WAA5B;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\n/**\n * Sets up the console and exception handling (redbox) for React Native.\n * You can use this module directly, or just require InitializeCore.\n */\nconst ExceptionsManager = require('./ExceptionsManager');\nExceptionsManager.installConsoleErrorReporter();\n\n// Set up error handler\nif (!global.__fbDisableExceptionsManager) {\n  const handleError = (e, isFatal) => {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      console.log('Failed to print error: ', ee.message);\n      throw e;\n    }\n  };\n\n  const ErrorUtils = require('../vendor/core/ErrorUtils');\n  ErrorUtils.setGlobalHandler(handleError);\n}\n"]},"metadata":{},"sourceType":"script"}