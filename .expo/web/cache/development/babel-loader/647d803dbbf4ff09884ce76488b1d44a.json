{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAreaProvider = SafeAreaProvider;\nexports.useSafeArea = useSafeArea;\nexports.SafeAreaView = SafeAreaView;\nObject.defineProperty(exports, \"initialWindowSafeAreaInsets\", {\n  enumerable: true,\n  get: function get() {\n    return _InitialWindowSafeAreaInsets.default;\n  }\n});\nexports.SafeAreaConsumer = exports.SafeAreaContext = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _NativeSafeAreaView = _interopRequireDefault(require(\"./NativeSafeAreaView\"));\n\nvar _InitialWindowSafeAreaInsets = _interopRequireDefault(require(\"./InitialWindowSafeAreaInsets\"));\n\nvar _jsxFileName = \"/Users/janic/Developer/react-native-safe-area-context/src/index.tsx\";\nvar SafeAreaContext = React.createContext(null);\nexports.SafeAreaContext = SafeAreaContext;\n\nfunction SafeAreaProvider(_ref) {\n  var children = _ref.children,\n      initialSafeAreaInsets = _ref.initialSafeAreaInsets;\n  var parentInsets = useParentSafeArea();\n\n  var _React$useState = React.useState(initialSafeAreaInsets || parentInsets),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      insets = _React$useState2[0],\n      setInsets = _React$useState2[1];\n\n  var onInsetsChange = React.useCallback(function (event) {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n  return React.createElement(_NativeSafeAreaView.default, {\n    style: styles.fill,\n    onInsetsChange: onInsetsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }, insets != null ? React.createElement(SafeAreaContext.Provider, {\n    value: insets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }, children) : null);\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  fill: {\n    flex: 1\n  }\n});\n\nvar SafeAreaConsumer = SafeAreaContext.Consumer;\nexports.SafeAreaConsumer = SafeAreaConsumer;\n\nfunction useParentSafeArea() {\n  return React.useContext(SafeAreaContext);\n}\n\nfunction useSafeArea() {\n  var safeArea = React.useContext(SafeAreaContext);\n\n  if (safeArea == null) {\n    throw new Error('No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');\n  }\n\n  return safeArea;\n}\n\nfunction SafeAreaView(_ref2) {\n  var style = _ref2.style,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, [\"style\"]);\n  var insets = useSafeArea();\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: [{\n      paddingTop: insets.top,\n      paddingRight: insets.right,\n      paddingBottom: insets.bottom,\n      paddingLeft: insets.left\n    }, style]\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }));\n}","map":{"version":3,"sources":["index.tsx"],"names":["SafeAreaContext","React","children","initialSafeAreaInsets","parentInsets","useParentSafeArea","insets","setInsets","onInsetsChange","event","styles","StyleSheet","fill","flex","SafeAreaConsumer","safeArea","style","rest","useSafeArea","paddingTop","paddingRight","paddingBottom","paddingLeft"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;AAEO,IAAMA,eAAe,GAAGC,KAAK,CAALA,aAAAA,CAAxB,IAAwBA,CAAxB;;;AAOA,SAAA,gBAAA,CAAA,IAAA,EAGe;AAFpBC,MAAAA,QAEoB,GAAA,IAAA,CAFpBA,QAAAA;AAAAA,MACAC,qBACoB,GAAA,IAAA,CADpBA,qBADAD;AAGA,MAAME,YAAY,GAAGC,iBAArB,EAAA;;AADoB,MAAA,eAAA,GAEQJ,KAAK,CAALA,QAAAA,CAC1BE,qBAAqB,IAHH,YAEQF,CAFR;AAAA,MAAA,gBAAA,GAAA,6BAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAEbK,MAFa,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAELC,SAFK,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAKpB,MAAMC,cAAc,GAAGP,KAAK,CAALA,WAAAA,CAAkB,UAAA,KAAA,EAA8B;AACrEM,IAAAA,SAAS,CAACE,KAAK,CAALA,WAAAA,CAAVF,MAAS,CAATA;AADqBN,GAAAA,EAAvB,EAAuBA,CAAvB;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,2BAAA,EAAA;AAAoB,IAAA,KAAK,EAAES,MAAM,CAAjC,IAAA;AAAwC,IAAA,cAAc,EAAtD,cAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EACGJ,MAAM,IAANA,IAAAA,GACC,KAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,EAAA;AAA0B,IAAA,KAAK,EAA/B,MAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA;AAAA,GAAA,EADDA,QACC,CADDA,GAFL,IACE,CADF;AAWF;;AAAA,IAAMI,MAAM,GAAGC,wBAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EADd;AACQ;AADyB,CAAlBF,CAAf;;AAIO,IAAMG,gBAAgB,GAAGd,eAAe,CAAxC,QAAA;;;AAEP,SAAA,iBAAA,GAAwE;AACtE,SAAOC,KAAK,CAALA,UAAAA,CAAP,eAAOA,CAAP;AAGF;;AAAO,SAAA,WAAA,GAAoC;AACzC,MAAMc,QAAQ,GAAGd,KAAK,CAALA,UAAAA,CAAjB,eAAiBA,CAAjB;;AACA,MAAIc,QAAQ,IAAZ,IAAA,EAAsB;AACpB,UAAM,IAAA,KAAA,CAAN,wGAAM,CAAN;AAIF;;AAAA,SAAA,QAAA;AAGF;;AAAO,SAAA,YAAA,CAAA,KAAA,EAGuC;AAF5CC,MAAAA,KAE4C,GAAA,KAAA,CAF5CA,KAAAA;AAAAA,MACGC,IACyC,GAAA,uCAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAF5CD;AAGA,MAAMV,MAAM,GAAGY,WAAf,EAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,uBAAA;AACE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,UAAU,EAAEb,MAAM,CADpB,GAAA;AAEEc,MAAAA,YAAY,EAAEd,MAAM,CAFtB,KAAA;AAGEe,MAAAA,aAAa,EAAEf,MAAM,CAHvB,MAAA;AAIEgB,MAAAA,WAAW,EAAEhB,MAAM,CALhB;AACL,KADK,EADT,KACS;AADT,GAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { EdgeInsets as EdgeInsetsT, InsetChangedEvent } from './SafeArea.types';\nimport NativeSafeAreaView from './NativeSafeAreaView';\n\nexport { default as initialWindowSafeAreaInsets } from './InitialWindowSafeAreaInsets';\n\nexport const SafeAreaContext = React.createContext<EdgeInsetsT | null>(null);\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialSafeAreaInsets?: EdgeInsetsT | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialSafeAreaInsets,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeArea();\n  const [insets, setInsets] = React.useState<EdgeInsetsT | null | undefined>(\n    initialSafeAreaInsets || parentInsets,\n  );\n  const onInsetsChange = React.useCallback((event: InsetChangedEvent) => {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n\n  return (\n    <NativeSafeAreaView style={styles.fill} onInsetsChange={onInsetsChange}>\n      {insets != null ? (\n        <SafeAreaContext.Provider value={insets}>\n          {children}\n        </SafeAreaContext.Provider>\n      ) : null}\n    </NativeSafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nexport const SafeAreaConsumer = SafeAreaContext.Consumer;\n\nfunction useParentSafeArea(): React.ContextType<typeof SafeAreaContext> {\n  return React.useContext(SafeAreaContext);\n}\n\nexport function useSafeArea(): EdgeInsetsT {\n  const safeArea = React.useContext(SafeAreaContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function SafeAreaView({\n  style,\n  ...rest\n}: ViewProps & { children: React.ReactNode }) {\n  const insets = useSafeArea();\n\n  return (\n    <View\n      style={[\n        {\n          paddingTop: insets.top,\n          paddingRight: insets.right,\n          paddingBottom: insets.bottom,\n          paddingLeft: insets.left,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nexport type EdgeInsets = EdgeInsetsT;\n"]},"metadata":{},"sourceType":"script"}