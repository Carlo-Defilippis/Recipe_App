{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DemoScreen = exports.heart = exports.logoIgnite = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _components = require(\"../../components\");\n\nvar _theme = require(\"../../theme\");\n\nvar _api = require(\"../../services/api\");\n\nvar _storage = require(\"../../utils/storage\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\app\\\\screens\\\\demo-screen\\\\demo-screen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar logoIgnite = require(\"./logo-ignite.png\");\n\nexports.logoIgnite = logoIgnite;\n\nvar heart = require(\"./heart.png\");\n\nexports.heart = heart;\nvar FULL = {\n  flex: 1\n};\nvar CONTAINER = {\n  backgroundColor: _theme.color.transparent,\n  paddingHorizontal: _theme.spacing[4]\n};\nvar DEMO = {\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4],\n  backgroundColor: \"#5D2555\"\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\n\nvar DEMO_TEXT = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 13,\n  letterSpacing: 2\n});\n\nvar HEADER = {\n  paddingTop: _theme.spacing[3],\n  paddingBottom: _theme.spacing[5] - 1,\n  paddingHorizontal: 0\n};\n\nvar HEADER_TITLE = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 12,\n  lineHeight: 15,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n});\n\nvar TITLE = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n  marginBottom: _theme.spacing[5]\n});\n\nvar TAGLINE = {\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22,\n  marginBottom: _theme.spacing[4] + _theme.spacing[1]\n};\nvar IGNITE = {\n  marginVertical: _theme.spacing[6],\n  alignSelf: \"center\"\n};\nvar LOVE_WRAPPER = {\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  alignSelf: \"center\"\n};\nvar LOVE = {\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22\n};\nvar HEART = {\n  marginHorizontal: _theme.spacing[2],\n  width: 10,\n  height: 10,\n  resizeMode: \"contain\"\n};\nvar HINT = {\n  color: \"#BAB6C8\",\n  fontSize: 12,\n  lineHeight: 15,\n  marginVertical: _theme.spacing[2]\n};\nvar DemoScreen = (0, _mobxReactLite.observer)(function DemoScreen() {\n  var navigation = (0, _native.useNavigation)();\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var demoReactotron = _react.default.useMemo(function () {\n    return function _callee() {\n      var demo;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.tron.log(\"Your Friendly tron log message\");\n              console.tron.logImportant(\"I am important\");\n              console.tron.display({\n                name: \"DISPLAY\",\n                value: {\n                  numbers: 1,\n                  strings: \"strings\",\n                  booleans: true,\n                  arrays: [1, 2, 3],\n                  objects: {\n                    deeper: {\n                      deeper: {\n                        yay: \"ðŸ‘¾\"\n                      }\n                    }\n                  },\n                  functionNames: function hello() {}\n                },\n                preview: \"More control with display()\",\n                important: true,\n                image: {\n                  uri: \"https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4\"\n                }\n              });\n              demo = new _api.Api();\n              demo.setup();\n              demo.getUser(\"1\");\n              _context.next = 8;\n              return _regenerator.default.awrap((0, _storage.save)(\"Cool Name\", \"Boaty McBoatface\"));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, []);\n\n  return _react.default.createElement(_reactNative.View, {\n    style: FULL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_components.Wallpaper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_components.Screen, {\n    style: CONTAINER,\n    preset: \"scroll\",\n    backgroundColor: _theme.color.transparent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_components.Header, {\n    headerTx: \"demoScreen.howTo\",\n    leftIcon: \"back\",\n    onLeftPress: goBack,\n    style: HEADER,\n    titleStyle: HEADER_TITLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_components.Text, {\n    style: TITLE,\n    preset: \"header\",\n    tx: \"demoScreen.title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_components.Text, {\n    style: TAGLINE,\n    tx: \"demoScreen.tagLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_components.BulletItem, {\n    text: \"Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_components.BulletItem, {\n    text: \"Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_components.Button, {\n    style: DEMO,\n    textStyle: DEMO_TEXT,\n    tx: \"demoScreen.reactotron\",\n    onPress: demoReactotron,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_components.Text, {\n    style: HINT,\n    tx: \"demoScreen.\" + _reactNative.Platform.OS + \"ReactotronHint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Image, {\n    source: logoIgnite,\n    style: IGNITE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: LOVE_WRAPPER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_components.Text, {\n    style: LOVE,\n    text: \"Made with\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    source: heart,\n    style: HEART,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_components.Text, {\n    style: LOVE,\n    text: \"by Infinite Red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }))));\n});\nexports.DemoScreen = DemoScreen;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/screens/demo-screen/demo-screen.tsx"],"names":["logoIgnite","require","heart","FULL","flex","CONTAINER","backgroundColor","color","transparent","paddingHorizontal","spacing","DEMO","paddingVertical","BOLD","fontWeight","DEMO_TEXT","fontSize","letterSpacing","HEADER","paddingTop","paddingBottom","HEADER_TITLE","lineHeight","textAlign","TITLE","marginBottom","TAGLINE","IGNITE","marginVertical","alignSelf","LOVE_WRAPPER","flexDirection","alignItems","LOVE","HEART","marginHorizontal","width","height","resizeMode","HINT","DemoScreen","navigation","goBack","demoReactotron","React","useMemo","console","tron","log","logImportant","display","name","value","numbers","strings","booleans","arrays","objects","deeper","yay","functionNames","hello","preview","important","image","uri","demo","Api","setup","getUser","Platform","OS"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACO,IAAMA,UAAU,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;;AAEP,IAAME,IAAe,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAxB;AACA,IAAMC,SAAoB,GAAG;AAC3BC,EAAAA,eAAe,EAAEC,aAAMC,WADI;AAE3BC,EAAAA,iBAAiB,EAAEC,eAAQ,CAAR;AAFQ,CAA7B;AAIA,IAAMC,IAAe,GAAG;AACtBC,EAAAA,eAAe,EAAEF,eAAQ,CAAR,CADK;AAEtBD,EAAAA,iBAAiB,EAAEC,eAAQ,CAAR,CAFG;AAGtBJ,EAAAA,eAAe,EAAE;AAHK,CAAxB;AAKA,IAAMO,IAAe,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAxB;;AACA,IAAMC,SAAoB,mCACrBF,IADqB;AAExBG,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,aAAa,EAAE;AAHS,EAA1B;;AAKA,IAAMC,MAAiB,GAAG;AACxBC,EAAAA,UAAU,EAAET,eAAQ,CAAR,CADY;AAExBU,EAAAA,aAAa,EAAEV,eAAQ,CAAR,IAAa,CAFJ;AAGxBD,EAAAA,iBAAiB,EAAE;AAHK,CAA1B;;AAKA,IAAMY,YAAuB,mCACxBR,IADwB;AAE3BG,EAAAA,QAAQ,EAAE,EAFiB;AAG3BM,EAAAA,UAAU,EAAE,EAHe;AAI3BC,EAAAA,SAAS,EAAE,QAJgB;AAK3BN,EAAAA,aAAa,EAAE;AALY,EAA7B;;AAOA,IAAMO,KAAgB,mCACjBX,IADiB;AAEpBG,EAAAA,QAAQ,EAAE,EAFU;AAGpBM,EAAAA,UAAU,EAAE,EAHQ;AAIpBC,EAAAA,SAAS,EAAE,QAJS;AAKpBE,EAAAA,YAAY,EAAEf,eAAQ,CAAR;AALM,EAAtB;;AAOA,IAAMgB,OAAkB,GAAG;AACzBnB,EAAAA,KAAK,EAAE,SADkB;AAEzBS,EAAAA,QAAQ,EAAE,EAFe;AAGzBM,EAAAA,UAAU,EAAE,EAHa;AAIzBG,EAAAA,YAAY,EAAEf,eAAQ,CAAR,IAAaA,eAAQ,CAAR;AAJF,CAA3B;AAMA,IAAMiB,MAAkB,GAAG;AACzBC,EAAAA,cAAc,EAAElB,eAAQ,CAAR,CADS;AAEzBmB,EAAAA,SAAS,EAAE;AAFc,CAA3B;AAIA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,aAAa,EAAE,KADe;AAE9BC,EAAAA,UAAU,EAAE,QAFkB;AAG9BH,EAAAA,SAAS,EAAE;AAHmB,CAAhC;AAKA,IAAMI,IAAe,GAAG;AACtB1B,EAAAA,KAAK,EAAE,SADe;AAEtBS,EAAAA,QAAQ,EAAE,EAFY;AAGtBM,EAAAA,UAAU,EAAE;AAHU,CAAxB;AAKA,IAAMY,KAAiB,GAAG;AACxBC,EAAAA,gBAAgB,EAAEzB,eAAQ,CAAR,CADM;AAExB0B,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,MAAM,EAAE,EAHgB;AAIxBC,EAAAA,UAAU,EAAE;AAJY,CAA1B;AAMA,IAAMC,IAAe,GAAG;AACtBhC,EAAAA,KAAK,EAAE,SADe;AAEtBS,EAAAA,QAAQ,EAAE,EAFY;AAGtBM,EAAAA,UAAU,EAAE,EAHU;AAItBM,EAAAA,cAAc,EAAElB,eAAQ,CAAR;AAJM,CAAxB;AAOO,IAAM8B,UAAU,GAAG,6BAAS,SAASA,UAAT,GAAsB;AACvD,MAAMC,UAAU,GAAG,4BAAnB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,UAAU,CAACC,MAAX,EAAN;AAAA,GAAf;;AAEA,MAAMC,cAAc,GAAGC,eAAMC,OAAN,CACrB;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,cAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,gCAAjB;AACAF,cAAAA,OAAO,CAACC,IAAR,CAAaE,YAAb,CAA0B,gBAA1B;AACAH,cAAAA,OAAO,CAACC,IAAR,CAAaG,OAAb,CAAqB;AACnBC,gBAAAA,IAAI,EAAE,SADa;AAEnBC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE,CADJ;AAELC,kBAAAA,OAAO,EAAE,SAFJ;AAGLC,kBAAAA,QAAQ,EAAE,IAHL;AAILC,kBAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJH;AAKLC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,MAAM,EAAE;AACNA,sBAAAA,MAAM,EAAE;AACNC,wBAAAA,GAAG,EAAE;AADC;AADF;AADD,mBALJ;AAYLC,kBAAAA,aAAa,EAAE,SAASC,KAAT,GAAiB,CAE/B;AAdI,iBAFY;AAkBnBC,gBAAAA,OAAO,EAAE,6BAlBU;AAmBnBC,gBAAAA,SAAS,EAAE,IAnBQ;AAoBnBC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,GAAG,EACD;AAFG;AApBY,eAArB;AA2BMC,cAAAA,IA9BF,GA8BS,IAAIC,QAAJ,EA9BT;AA+BJD,cAAAA,IAAI,CAACE,KAAL;AACAF,cAAAA,IAAI,CAACG,OAAL,CAAa,GAAb;AAhCI;AAAA,gDAkCE,mBAAK,WAAL,EAAkB,kBAAlB,CAlCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;AAAA,GADqB,EAqCrB,EArCqB,CAAvB;;AAwCA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAElE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,kBAAD;AAAQ,IAAA,KAAK,EAAEE,SAAf;AAA0B,IAAA,MAAM,EAAC,QAAjC;AAA0C,IAAA,eAAe,EAAEE,aAAMC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,QAAQ,EAAC,kBADX;AAEE,IAAA,QAAQ,EAAC,MAFX;AAGE,IAAA,WAAW,EAAEkC,MAHf;AAIE,IAAA,KAAK,EAAExB,MAJT;AAKE,IAAA,UAAU,EAAEG,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEG,KAAb;AAAoB,IAAA,MAAM,EAAC,QAA3B;AAAoC,IAAA,EAAE,EAAC,kBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEE,OAAb;AAAsB,IAAA,EAAE,EAAC,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,6BAAC,sBAAD;AAAY,IAAA,IAAI,EAAC,6FAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,6BAAC,sBAAD;AAAY,IAAA,IAAI,EAAC,sFAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAEf,IADT;AAEE,IAAA,SAAS,EAAEI,SAFb;AAGE,IAAA,EAAE,EAAC,uBAHL;AAIE,IAAA,OAAO,EAAE4B,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEJ,IAAb;AAAmB,IAAA,EAAE,kBAAgB+B,sBAASC,EAAzB,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,EAqBE,6BAAC,kBAAD;AAAO,IAAA,MAAM,EAAEvE,UAAf;AAA2B,IAAA,KAAK,EAAE2B,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAsBE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEG,IAAb;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,kBAAD;AAAO,IAAA,MAAM,EAAE/B,KAAf;AAAsB,IAAA,KAAK,EAAEgC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAED,IAAb;AAAmB,IAAA,IAAI,EAAC,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAtBF,CAFF,CADF;AAiCD,CA7EyB,CAAnB","sourcesContent":["import React from \"react\"\r\nimport { Image, ImageStyle, Platform, TextStyle, View, ViewStyle } from \"react-native\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { BulletItem, Button, Header, Text, Screen, Wallpaper } from \"../../components\"\r\nimport { color, spacing } from \"../../theme\"\r\nimport { Api } from \"../../services/api\"\r\nimport { save } from \"../../utils/storage\"\r\nexport const logoIgnite = require(\"./logo-ignite.png\")\r\nexport const heart = require(\"./heart.png\")\r\n\r\nconst FULL: ViewStyle = { flex: 1 }\r\nconst CONTAINER: ViewStyle = {\r\n  backgroundColor: color.transparent,\r\n  paddingHorizontal: spacing[4],\r\n}\r\nconst DEMO: ViewStyle = {\r\n  paddingVertical: spacing[4],\r\n  paddingHorizontal: spacing[4],\r\n  backgroundColor: \"#5D2555\",\r\n}\r\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\r\nconst DEMO_TEXT: TextStyle = {\r\n  ...BOLD,\r\n  fontSize: 13,\r\n  letterSpacing: 2,\r\n}\r\nconst HEADER: TextStyle = {\r\n  paddingTop: spacing[3],\r\n  paddingBottom: spacing[5] - 1,\r\n  paddingHorizontal: 0,\r\n}\r\nconst HEADER_TITLE: TextStyle = {\r\n  ...BOLD,\r\n  fontSize: 12,\r\n  lineHeight: 15,\r\n  textAlign: \"center\",\r\n  letterSpacing: 1.5,\r\n}\r\nconst TITLE: TextStyle = {\r\n  ...BOLD,\r\n  fontSize: 28,\r\n  lineHeight: 38,\r\n  textAlign: \"center\",\r\n  marginBottom: spacing[5],\r\n}\r\nconst TAGLINE: TextStyle = {\r\n  color: \"#BAB6C8\",\r\n  fontSize: 15,\r\n  lineHeight: 22,\r\n  marginBottom: spacing[4] + spacing[1],\r\n}\r\nconst IGNITE: ImageStyle = {\r\n  marginVertical: spacing[6],\r\n  alignSelf: \"center\",\r\n}\r\nconst LOVE_WRAPPER: ViewStyle = {\r\n  flexDirection: \"row\",\r\n  alignItems: \"center\",\r\n  alignSelf: \"center\",\r\n}\r\nconst LOVE: TextStyle = {\r\n  color: \"#BAB6C8\",\r\n  fontSize: 15,\r\n  lineHeight: 22,\r\n}\r\nconst HEART: ImageStyle = {\r\n  marginHorizontal: spacing[2],\r\n  width: 10,\r\n  height: 10,\r\n  resizeMode: \"contain\",\r\n}\r\nconst HINT: TextStyle = {\r\n  color: \"#BAB6C8\",\r\n  fontSize: 12,\r\n  lineHeight: 15,\r\n  marginVertical: spacing[2],\r\n}\r\n\r\nexport const DemoScreen = observer(function DemoScreen() {\r\n  const navigation = useNavigation()\r\n  const goBack = () => navigation.goBack()\r\n\r\n  const demoReactotron = React.useMemo(\r\n    () => async () => {\r\n      console.tron.log(\"Your Friendly tron log message\")\r\n      console.tron.logImportant(\"I am important\")\r\n      console.tron.display({\r\n        name: \"DISPLAY\",\r\n        value: {\r\n          numbers: 1,\r\n          strings: \"strings\",\r\n          booleans: true,\r\n          arrays: [1, 2, 3],\r\n          objects: {\r\n            deeper: {\r\n              deeper: {\r\n                yay: \"ðŸ‘¾\",\r\n              },\r\n            },\r\n          },\r\n          functionNames: function hello() {\r\n            /* dummy function */\r\n          },\r\n        },\r\n        preview: \"More control with display()\",\r\n        important: true,\r\n        image: {\r\n          uri:\r\n            \"https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4\",\r\n        },\r\n      })\r\n      // make an API call for the demo\r\n      // Don't do API like this, use store's API\r\n      const demo = new Api()\r\n      demo.setup()\r\n      demo.getUser(\"1\")\r\n      // Let's do some async storage stuff\r\n      await save(\"Cool Name\", \"Boaty McBoatface\")\r\n    },\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <View style={FULL}>\r\n      <Wallpaper />\r\n      <Screen style={CONTAINER} preset=\"scroll\" backgroundColor={color.transparent}>\r\n        <Header\r\n          headerTx=\"demoScreen.howTo\"\r\n          leftIcon=\"back\"\r\n          onLeftPress={goBack}\r\n          style={HEADER}\r\n          titleStyle={HEADER_TITLE}\r\n        />\r\n        <Text style={TITLE} preset=\"header\" tx=\"demoScreen.title\" />\r\n        <Text style={TAGLINE} tx=\"demoScreen.tagLine\" />\r\n        <BulletItem text=\"Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!\" />\r\n        <BulletItem text=\"Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n.\" />\r\n        <View>\r\n          <Button\r\n            style={DEMO}\r\n            textStyle={DEMO_TEXT}\r\n            tx=\"demoScreen.reactotron\"\r\n            onPress={demoReactotron}\r\n          />\r\n          <Text style={HINT} tx={`demoScreen.${Platform.OS}ReactotronHint`} />\r\n        </View>\r\n        <Image source={logoIgnite} style={IGNITE} />\r\n        <View style={LOVE_WRAPPER}>\r\n          <Text style={LOVE} text=\"Made with\" />\r\n          <Image source={heart} style={HEART} />\r\n          <Text style={LOVE} text=\"by Infinite Red\" />\r\n        </View>\r\n      </Screen>\r\n    </View>\r\n  )\r\n})\r\n"]},"metadata":{},"sourceType":"script"}