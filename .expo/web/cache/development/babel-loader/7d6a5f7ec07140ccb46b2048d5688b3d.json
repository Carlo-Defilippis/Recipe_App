{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PressabilityDebugView = PressabilityDebugView;\nexports.isEnabled = isEnabled;\n\nvar _normalizeColor = _interopRequireDefault(require(\"../StyleSheet/normalizeColor\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Components/Touchable/Touchable\"));\n\nvar _View = _interopRequireDefault(require(\"../Components/View/View\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\node_modules\\\\react-native\\\\Libraries\\\\Pressability\\\\PressabilityDebug.js\";\n\nfunction PressabilityDebugView(_ref) {\n  var color = _ref.color,\n      hitSlop = _ref.hitSlop;\n\n  if (__DEV__) {\n    if (isEnabled()) {\n      var _hitSlop$bottom, _hitSlop$left, _hitSlop$right, _hitSlop$top;\n\n      var normalizedColor = (0, _normalizeColor.default)(color);\n\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n\n      var baseColor = '#' + (normalizedColor != null ? normalizedColor : 0).toString(16).padStart(8, '0');\n      return React.createElement(_View.default, {\n        pointerEvents: \"none\",\n        style: {\n          backgroundColor: baseColor.slice(0, -2) + '0F',\n          borderColor: baseColor.slice(0, -2) + '55',\n          borderStyle: 'dashed',\n          borderWidth: 1,\n          bottom: -((_hitSlop$bottom = hitSlop == null ? void 0 : hitSlop.bottom) != null ? _hitSlop$bottom : 0),\n          left: -((_hitSlop$left = hitSlop == null ? void 0 : hitSlop.left) != null ? _hitSlop$left : 0),\n          position: 'absolute',\n          right: -((_hitSlop$right = hitSlop == null ? void 0 : hitSlop.right) != null ? _hitSlop$right : 0),\n          top: -((_hitSlop$top = hitSlop == null ? void 0 : hitSlop.top) != null ? _hitSlop$top : 0)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  return null;\n}\n\nfunction isEnabled() {\n  if (__DEV__) {\n    return _Touchable.default.TOUCH_TARGET_DEBUG;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Pressability/PressabilityDebug.js"],"names":["PressabilityDebugView","color","hitSlop","__DEV__","isEnabled","normalizedColor","baseColor","toString","padStart","backgroundColor","slice","borderColor","borderStyle","borderWidth","bottom","left","position","right","top","Touchable","TOUCH_TARGET_DEBUG"],"mappings":"AAUA;;;;;;;;;;;;AAEA;;AAGA;;AACA;;AACA;;;;AA2BO,SAASA,qBAAT,OAAoE;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;;AACzE,MAAIC,OAAJ,EAAa;AACX,QAAIC,SAAS,EAAb,EAAiB;AAAA;;AACf,UAAMC,eAAe,GAAG,6BAAeJ,KAAf,CAAxB;;AACA,UAAI,OAAOI,eAAP,KAA2B,QAA/B,EAAyC;AACvC,eAAO,IAAP;AACD;;AACD,UAAMC,SAAS,GACb,MAAM,CAACD,eAAD,WAACA,eAAD,GAAoB,CAApB,EAAuBE,QAAvB,CAAgC,EAAhC,EAAoCC,QAApC,CAA6C,CAA7C,EAAgD,GAAhD,CADR;AAGA,aACE,oBAAC,aAAD;AACE,QAAA,aAAa,EAAC,MADhB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAEH,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,IAAyB,IADrC;AAELC,UAAAA,WAAW,EAAEL,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,IAAyB,IAFjC;AAGLE,UAAAA,WAAW,EAAE,QAHR;AAILC,UAAAA,WAAW,EAAE,CAJR;AAKLC,UAAAA,MAAM,EAAE,qBAAEZ,OAAF,oBAAEA,OAAO,CAAEY,MAAX,8BAAqB,CAArB,CALH;AAMLC,UAAAA,IAAI,EAAE,mBAAEb,OAAF,oBAAEA,OAAO,CAAEa,IAAX,4BAAmB,CAAnB,CAND;AAOLC,UAAAA,QAAQ,EAAE,UAPL;AAQLC,UAAAA,KAAK,EAAE,oBAAEf,OAAF,oBAAEA,OAAO,CAAEe,KAAX,6BAAoB,CAApB,CARF;AASLC,UAAAA,GAAG,EAAE,kBAAEhB,OAAF,oBAAEA,OAAO,CAAEgB,GAAX,2BAAkB,CAAlB;AATA,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAgBD;AACF;;AACD,SAAO,IAAP;AACD;;AAEM,SAASd,SAAT,GAA8B;AACnC,MAAID,OAAJ,EAAa;AACX,WAAOgB,mBAAUC,kBAAjB;AACD;;AACD,SAAO,KAAP;AACD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport type {ColorValue} from '../StyleSheet/StyleSheetTypes';\n\nimport Touchable from '../Components/Touchable/Touchable';\nimport View from '../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  color: ColorValue,\n  hitSlop: ?$ReadOnly<{|\n    bottom?: ?number,\n    left?: ?number,\n    right?: ?number,\n    top?: ?number,\n  |}>,\n|}>;\n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView({color, hitSlop}: Props): React.Node {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={{\n            backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n            borderColor: baseColor.slice(0, -2) + '55', // 85%\n            borderStyle: 'dashed',\n            borderWidth: 1,\n            bottom: -(hitSlop?.bottom ?? 0),\n            left: -(hitSlop?.left ?? 0),\n            position: 'absolute',\n            right: -(hitSlop?.right ?? 0),\n            top: -(hitSlop?.top ?? 0),\n          }}\n        />\n      );\n    }\n  }\n  return null;\n}\n\nexport function isEnabled(): boolean {\n  if (__DEV__) {\n    return Touchable.TOUCH_TARGET_DEBUG;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"script"}