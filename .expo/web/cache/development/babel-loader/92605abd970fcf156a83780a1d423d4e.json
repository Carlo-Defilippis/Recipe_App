{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"@storybook/react-native\");\n\nvar _views = require(\"../../../storybook/views\");\n\nvar _ = require(\"../\");\n\nvar _reactPowerplug = require(\"react-powerplug\");\n\nvar _reactNative2 = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\app\\\\components\\\\text-field\\\\text-field.story.tsx\";\n\nvar styleArray = [{\n  paddingHorizontal: 30\n}, {\n  borderWidth: 30\n}];\nvar inputStyleArray = [{\n  backgroundColor: \"rebeccapurple\",\n  color: \"white\",\n  padding: 40\n}, {\n  borderWidth: 10,\n  borderRadius: 4,\n  borderColor: \"#7fff00\"\n}];\nvar alertWhenFocused = true;\n(0, _reactNative.storiesOf)(\"TextField\", module).addDecorator(function (fn) {\n  return React.createElement(_views.StoryScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, fn());\n}).add(\"Labelling\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"Normal text\",\n    usage: \"Use placeholder and label to set the text.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var state = _ref.state,\n        setState = _ref.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      placeholder: \"omg your name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(_views.UseCase, {\n    text: \"i18n text\",\n    usage: \"Use placeholderTx and labelTx for i18n lookups\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var state = _ref2.state,\n        setState = _ref2.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      placeholderTx: \"storybook.placeholder\",\n      labelTx: \"storybook.field\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    });\n  })));\n}).add(\"Style Overrides\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    noPad: true,\n    text: \"Container Styles\",\n    usage: \"Useful for applying margins when laying out a form to remove padding if the form brings its own.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"Inigo\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var state = _ref3.state,\n        setState = _ref3.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"First Name\",\n      style: {\n        paddingTop: 0,\n        paddingHorizontal: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"Montoya\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, function (_ref4) {\n    var state = _ref4.state,\n        setState = _ref4.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Last Name\",\n      style: {\n        paddingBottom: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(_views.UseCase, {\n    text: \"Input Styles\",\n    usage: \"Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"fancy colour\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, function (_ref5) {\n    var state = _ref5.state,\n        setState = _ref5.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      inputStyle: {\n        backgroundColor: \"rebeccapurple\",\n        color: \"white\",\n        padding: 40,\n        borderWidth: 10,\n        borderRadius: 4,\n        borderColor: \"hotpink\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(_.Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), React.createElement(_views.UseCase, {\n    text: \"Style array\",\n    usage: \"Useful for 1-off exceptions, but using style arrays.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"fancy colour\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, function (_ref6) {\n    var state = _ref6.state,\n        setState = _ref6.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      style: styleArray,\n      inputStyle: inputStyleArray,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(_.Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n}).add(\"Ref Forwarding\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"Ref Forwarding\",\n    usage: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.State, {\n    initial: {\n      value: \"fancy colour\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, function (_ref7) {\n    var state = _ref7.state,\n        setState = _ref7.setState;\n    return React.createElement(_.TextField, {\n      onChangeText: function onChangeText(value) {\n        return setState({\n          value: value\n        });\n      },\n      value: state.value,\n      label: \"Name\",\n      inputStyle: {\n        backgroundColor: \"rebeccapurple\",\n        color: \"white\",\n        padding: 40,\n        borderWidth: 10,\n        borderRadius: 4,\n        borderColor: \"hotpink\"\n      },\n      forwardedRef: function forwardedRef(ref) {\n        return ref;\n      },\n      onFocus: function onFocus() {\n        if (alertWhenFocused) {\n          alertWhenFocused = false;\n\n          _reactNative2.Alert.alert(\"Text field focuesed with forwarded ref!\");\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    });\n  }), React.createElement(_.Text, {\n    text: \"* attention designers:  i am so sorry\",\n    preset: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/text-field/text-field.story.tsx"],"names":["styleArray","paddingHorizontal","borderWidth","inputStyleArray","backgroundColor","color","padding","borderRadius","borderColor","alertWhenFocused","module","addDecorator","fn","add","value","state","setState","paddingTop","paddingBottom","ref","Alert","alert"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\r\n/* eslint-disable react-native/no-color-literals */\r\n\r\nimport * as React from \"react\"\r\nimport { storiesOf } from \"@storybook/react-native\"\r\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\r\nimport { Text, TextField } from \"../\"\r\nimport { State } from \"react-powerplug\"\r\nimport { ViewStyle, TextStyle, Alert } from \"react-native\"\r\n\r\ndeclare let module\r\n\r\nconst styleArray: ViewStyle[] = [{ paddingHorizontal: 30 }, { borderWidth: 30 }]\r\n\r\nconst inputStyleArray: TextStyle[] = [\r\n  {\r\n    backgroundColor: \"rebeccapurple\",\r\n    color: \"white\",\r\n    padding: 40,\r\n  },\r\n  {\r\n    borderWidth: 10,\r\n    borderRadius: 4,\r\n    borderColor: \"#7fff00\",\r\n  },\r\n]\r\nlet alertWhenFocused = true\r\n\r\nstoriesOf(\"TextField\", module)\r\n  .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)\r\n  .add(\"Labelling\", () => (\r\n    <Story>\r\n      <UseCase text=\"Normal text\" usage=\"Use placeholder and label to set the text.\">\r\n        <State initial={{ value: \"\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"Name\"\r\n              placeholder=\"omg your name\"\r\n            />\r\n          )}\r\n        </State>\r\n      </UseCase>\r\n\r\n      <UseCase text=\"i18n text\" usage=\"Use placeholderTx and labelTx for i18n lookups\">\r\n        <State initial={{ value: \"\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              placeholderTx=\"storybook.placeholder\"\r\n              labelTx=\"storybook.field\"\r\n            />\r\n          )}\r\n        </State>\r\n      </UseCase>\r\n    </Story>\r\n  ))\r\n  .add(\"Style Overrides\", () => (\r\n    <Story>\r\n      <UseCase\r\n        noPad\r\n        text=\"Container Styles\"\r\n        usage=\"Useful for applying margins when laying out a form to remove padding if the form brings its own.\"\r\n      >\r\n        <State initial={{ value: \"Inigo\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"First Name\"\r\n              style={{ paddingTop: 0, paddingHorizontal: 40 }}\r\n            />\r\n          )}\r\n        </State>\r\n        <State initial={{ value: \"Montoya\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"Last Name\"\r\n              style={{ paddingBottom: 0 }}\r\n            />\r\n          )}\r\n        </State>\r\n      </UseCase>\r\n      <UseCase\r\n        text=\"Input Styles\"\r\n        usage=\"Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing.\"\r\n      >\r\n        <State initial={{ value: \"fancy colour\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"Name\"\r\n              inputStyle={{\r\n                backgroundColor: \"rebeccapurple\",\r\n                color: \"white\",\r\n                padding: 40,\r\n                borderWidth: 10,\r\n                borderRadius: 4,\r\n                borderColor: \"hotpink\",\r\n              }}\r\n            />\r\n          )}\r\n        </State>\r\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\r\n      </UseCase>\r\n\r\n      <UseCase text=\"Style array\" usage=\"Useful for 1-off exceptions, but using style arrays.\">\r\n        <State initial={{ value: \"fancy colour\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"Name\"\r\n              style={styleArray}\r\n              inputStyle={inputStyleArray}\r\n            />\r\n          )}\r\n        </State>\r\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\r\n      </UseCase>\r\n    </Story>\r\n  ))\r\n  .add(\"Ref Forwarding\", () => (\r\n    <Story>\r\n      <UseCase text=\"Ref Forwarding\" usage=\"\">\r\n        <State initial={{ value: \"fancy colour\" }}>\r\n          {({ state, setState }) => (\r\n            <TextField\r\n              onChangeText={value => setState({ value })}\r\n              value={state.value}\r\n              label=\"Name\"\r\n              inputStyle={{\r\n                backgroundColor: \"rebeccapurple\",\r\n                color: \"white\",\r\n                padding: 40,\r\n                borderWidth: 10,\r\n                borderRadius: 4,\r\n                borderColor: \"hotpink\",\r\n              }}\r\n              forwardedRef={ref => ref}\r\n              onFocus={() => {\r\n                if (alertWhenFocused) {\r\n                  // Prevent text field focus from being repeatedly triggering alert\r\n                  alertWhenFocused = false\r\n                  Alert.alert(\"Text field focuesed with forwarded ref!\")\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </State>\r\n        <Text text=\"* attention designers:  i am so sorry\" preset=\"secondary\" />\r\n      </UseCase>\r\n    </Story>\r\n  ))\r\n"]},"metadata":{},"sourceType":"script"}