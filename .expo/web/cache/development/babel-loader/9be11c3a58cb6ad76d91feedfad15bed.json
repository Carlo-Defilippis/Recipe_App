{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Checkbox = Checkbox;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _text = require(\"../text/text\");\n\nvar _theme = require(\"../../theme\");\n\nvar _ramda = require(\"ramda\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\app\\\\components\\\\checkbox\\\\checkbox.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ROOT = {\n  flexDirection: \"row\",\n  paddingVertical: _theme.spacing[1],\n  alignSelf: \"flex-start\"\n};\nvar DIMENSIONS = {\n  width: 16,\n  height: 16\n};\n\nvar OUTLINE = _objectSpread(_objectSpread({}, DIMENSIONS), {}, {\n  marginTop: 2,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderWidth: 1,\n  borderColor: _theme.color.primaryDarker,\n  borderRadius: 1\n});\n\nvar FILL = {\n  width: DIMENSIONS.width - 4,\n  height: DIMENSIONS.height - 4,\n  backgroundColor: _theme.color.primary\n};\nvar LABEL = {\n  paddingLeft: _theme.spacing[2]\n};\n\nfunction Checkbox(props) {\n  var numberOfLines = props.multiline ? 0 : 1;\n  var rootStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([ROOT, props.style]));\n  var outlineStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([OUTLINE, props.outlineStyle]));\n  var fillStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([FILL, props.fillStyle]));\n  var onPress = props.onToggle ? function () {\n    return props.onToggle && props.onToggle(!props.value);\n  } : null;\n  return React.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 1,\n    disabled: !props.onToggle,\n    onPress: onPress,\n    style: rootStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: outlineStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, props.value && React.createElement(_reactNative.View, {\n    style: fillStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }\n  })), React.createElement(_text.Text, {\n    text: props.text,\n    tx: props.tx,\n    numberOfLines: numberOfLines,\n    style: LABEL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/checkbox/checkbox.tsx"],"names":["ROOT","flexDirection","paddingVertical","spacing","alignSelf","DIMENSIONS","width","height","OUTLINE","marginTop","justifyContent","alignItems","borderWidth","borderColor","color","primaryDarker","borderRadius","FILL","backgroundColor","primary","LABEL","paddingLeft","Checkbox","props","numberOfLines","multiline","rootStyle","style","outlineStyle","fillStyle","onPress","onToggle","value","text","tx"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,IAAe,GAAG;AACtBC,EAAAA,aAAa,EAAE,KADO;AAEtBC,EAAAA,eAAe,EAAEC,eAAQ,CAAR,CAFK;AAGtBC,EAAAA,SAAS,EAAE;AAHW,CAAxB;AAMA,IAAMC,UAAU,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAAnB;;AAEA,IAAMC,OAAkB,mCACnBH,UADmB;AAEtBI,EAAAA,SAAS,EAAE,CAFW;AAGtBC,EAAAA,cAAc,EAAE,QAHM;AAItBC,EAAAA,UAAU,EAAE,QAJU;AAKtBC,EAAAA,WAAW,EAAE,CALS;AAMtBC,EAAAA,WAAW,EAAEC,aAAMC,aANG;AAOtBC,EAAAA,YAAY,EAAE;AAPQ,EAAxB;;AAUA,IAAMC,IAAe,GAAG;AACtBX,EAAAA,KAAK,EAAED,UAAU,CAACC,KAAX,GAAmB,CADJ;AAEtBC,EAAAA,MAAM,EAAEF,UAAU,CAACE,MAAX,GAAoB,CAFN;AAGtBW,EAAAA,eAAe,EAAEJ,aAAMK;AAHD,CAAxB;AAMA,IAAMC,KAAgB,GAAG;AAAEC,EAAAA,WAAW,EAAElB,eAAQ,CAAR;AAAf,CAAzB;;AAEO,SAASmB,QAAT,CAAkBC,KAAlB,EAAwC;AAC7C,MAAMC,aAAa,GAAGD,KAAK,CAACE,SAAN,GAAkB,CAAlB,GAAsB,CAA5C;AAEA,MAAMC,SAAS,GAAG,qBAAS,oBAAQ,CAAC1B,IAAD,EAAOuB,KAAK,CAACI,KAAb,CAAR,CAAT,CAAlB;AACA,MAAMC,YAAY,GAAG,qBAAS,oBAAQ,CAACpB,OAAD,EAAUe,KAAK,CAACK,YAAhB,CAAR,CAAT,CAArB;AACA,MAAMC,SAAS,GAAG,qBAAS,oBAAQ,CAACZ,IAAD,EAAOM,KAAK,CAACM,SAAb,CAAR,CAAT,CAAlB;AAEA,MAAMC,OAAO,GAAGP,KAAK,CAACQ,QAAN,GAAiB;AAAA,WAAMR,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACQ,QAAN,CAAe,CAACR,KAAK,CAACS,KAAtB,CAAxB;AAAA,GAAjB,GAAwE,IAAxF;AAEA,SACE,oBAAC,6BAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,QAAQ,EAAE,CAACT,KAAK,CAACQ,QAFnB;AAGE,IAAA,OAAO,EAAED,OAHX;AAIE,IAAA,KAAK,EAAEJ,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,KAAK,CAACS,KAAN,IAAe,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,CANF,EAOE,oBAAC,UAAD;AAAM,IAAA,IAAI,EAAEN,KAAK,CAACU,IAAlB;AAAwB,IAAA,EAAE,EAAEV,KAAK,CAACW,EAAlC;AAAsC,IAAA,aAAa,EAAEV,aAArD;AAAoE,IAAA,KAAK,EAAEJ,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD","sourcesContent":["import * as React from \"react\"\r\nimport { TouchableOpacity, TextStyle, ViewStyle, View } from \"react-native\"\r\nimport { Text } from \"../text/text\"\r\nimport { color, spacing } from \"../../theme\"\r\nimport { CheckboxProps } from \"./checkbox.props\"\r\nimport { mergeAll, flatten } from \"ramda\"\r\n\r\nconst ROOT: ViewStyle = {\r\n  flexDirection: \"row\",\r\n  paddingVertical: spacing[1],\r\n  alignSelf: \"flex-start\",\r\n}\r\n\r\nconst DIMENSIONS = { width: 16, height: 16 }\r\n\r\nconst OUTLINE: ViewStyle = {\r\n  ...DIMENSIONS,\r\n  marginTop: 2, // finicky and will depend on font/line-height/baseline/weather\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  borderWidth: 1,\r\n  borderColor: color.primaryDarker,\r\n  borderRadius: 1,\r\n}\r\n\r\nconst FILL: ViewStyle = {\r\n  width: DIMENSIONS.width - 4,\r\n  height: DIMENSIONS.height - 4,\r\n  backgroundColor: color.primary,\r\n}\r\n\r\nconst LABEL: TextStyle = { paddingLeft: spacing[2] }\r\n\r\nexport function Checkbox(props: CheckboxProps) {\r\n  const numberOfLines = props.multiline ? 0 : 1\r\n\r\n  const rootStyle = mergeAll(flatten([ROOT, props.style]))\r\n  const outlineStyle = mergeAll(flatten([OUTLINE, props.outlineStyle]))\r\n  const fillStyle = mergeAll(flatten([FILL, props.fillStyle]))\r\n\r\n  const onPress = props.onToggle ? () => props.onToggle && props.onToggle(!props.value) : null\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={1}\r\n      disabled={!props.onToggle}\r\n      onPress={onPress}\r\n      style={rootStyle}\r\n    >\r\n      <View style={outlineStyle}>{props.value && <View style={fillStyle} />}</View>\r\n      <Text text={props.text} tx={props.tx} numberOfLines={numberOfLines} style={LABEL} />\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}