{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNative2 = require(\"@storybook/react-native\");\n\nvar _views = require(\"../../../storybook/views\");\n\nvar _checkbox = require(\"./checkbox\");\n\nvar _reactPowerplug = require(\"react-powerplug\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\na2tt\\\\Desktop\\\\homework\\\\Recipe_App\\\\app\\\\components\\\\checkbox\\\\checkbox.story.tsx\";\n\nvar arrayStyle = [{\n  paddingVertical: 40\n}, {\n  alignSelf: \"flex-end\"\n}];\nvar arrayOutlineStyle = [{\n  borderColor: \"#b443c9\"\n}, {\n  borderWidth: 25\n}];\nvar arrayFillStyle = [{\n  backgroundColor: \"#55e0ff\"\n}];\n(0, _reactNative2.storiesOf)(\"Checkbox\", module).addDecorator(function (fn) {\n  return React.createElement(_views.StoryScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }, fn());\n}).add(\"Behaviour\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"The Checkbox\",\n    usage: \"Use the checkbox to represent on/off states.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var on = _ref.on,\n        toggle = _ref.toggle;\n    return React.createElement(_checkbox.Checkbox, {\n      value: on,\n      onToggle: toggle,\n      text: \"Toggle me\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    });\n  })), React.createElement(_views.UseCase, {\n    text: \"value = true\",\n    usage: \"This is permanently on.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(_checkbox.Checkbox, {\n    value: true,\n    text: \"Always on\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), React.createElement(_views.UseCase, {\n    text: \"value = false\",\n    usage: \"This is permanantly off.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(_checkbox.Checkbox, {\n    value: false,\n    text: \"Always off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}).add(\"Styling\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"multiline = true\",\n    usage: \"For really really long text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var on = _ref2.on,\n        toggle = _ref2.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, React.createElement(_checkbox.Checkbox, {\n      text: \"We\\u2019re an App Design & Development Team. Experts in mobile & web technologies. We create beautiful, functional mobile apps and websites.\",\n      value: on,\n      multiline: true,\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(_views.UseCase, {\n    text: \".style\",\n    usage: \"Override the container style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var on = _ref3.on,\n        toggle = _ref3.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, React.createElement(_checkbox.Checkbox, {\n      text: \"Hello there!\",\n      value: on,\n      style: {\n        backgroundColor: \"purple\",\n        marginLeft: 40,\n        paddingVertical: 30,\n        paddingLeft: 60\n      },\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(_views.UseCase, {\n    text: \".outlineStyle\",\n    usage: \"Override the outline style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, function (_ref4) {\n    var on = _ref4.on,\n        toggle = _ref4.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, React.createElement(_checkbox.Checkbox, {\n      text: \"Outline is the box frame\",\n      value: on,\n      outlineStyle: {\n        borderColor: \"green\",\n        borderRadius: 10,\n        borderWidth: 4,\n        width: 60,\n        height: 20\n      },\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(_views.UseCase, {\n    text: \".fillStyle\",\n    usage: \"Override the fill style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, function (_ref5) {\n    var on = _ref5.on,\n        toggle = _ref5.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(_checkbox.Checkbox, {\n      text: \"Fill er up\",\n      value: on,\n      fillStyle: {\n        backgroundColor: \"red\",\n        borderRadius: 8\n      },\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(_views.UseCase, {\n    text: \"Array style\",\n    usage: \"Use array styles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, function (_ref6) {\n    var on = _ref6.on,\n        toggle = _ref6.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, React.createElement(_checkbox.Checkbox, {\n      text: \"Check it twice\",\n      value: on,\n      onToggle: toggle,\n      style: arrayStyle,\n      outlineStyle: arrayOutlineStyle,\n      fillStyle: arrayFillStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }));\n  })));\n});","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/checkbox/checkbox.story.tsx"],"names":["arrayStyle","paddingVertical","alignSelf","arrayOutlineStyle","borderColor","borderWidth","arrayFillStyle","backgroundColor","module","addDecorator","fn","add","on","toggle","marginLeft","paddingLeft","borderRadius","width","height"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\r\n/* eslint-disable react-native/no-color-literals */\r\n\r\nimport * as React from \"react\"\r\nimport { View, ViewStyle } from \"react-native\"\r\nimport { storiesOf } from \"@storybook/react-native\"\r\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\r\nimport { Checkbox } from \"./checkbox\"\r\nimport { Toggle } from \"react-powerplug\"\r\n\r\ndeclare let module\r\n\r\nconst arrayStyle: ViewStyle[] = [{ paddingVertical: 40 }, { alignSelf: \"flex-end\" }]\r\nconst arrayOutlineStyle: ViewStyle[] = [{ borderColor: \"#b443c9\" }, { borderWidth: 25 }]\r\nconst arrayFillStyle: ViewStyle[] = [{ backgroundColor: \"#55e0ff\" }]\r\n\r\nstoriesOf(\"Checkbox\", module)\r\n  .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)\r\n  .add(\"Behaviour\", () => (\r\n    <Story>\r\n      <UseCase text=\"The Checkbox\" usage=\"Use the checkbox to represent on/off states.\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => <Checkbox value={on} onToggle={toggle} text=\"Toggle me\" />}\r\n        </Toggle>\r\n      </UseCase>\r\n      <UseCase text=\"value = true\" usage=\"This is permanently on.\">\r\n        <Checkbox value={true} text=\"Always on\" />\r\n      </UseCase>\r\n      <UseCase text=\"value = false\" usage=\"This is permanantly off.\">\r\n        <Checkbox value={false} text=\"Always off\" />\r\n      </UseCase>\r\n    </Story>\r\n  ))\r\n  .add(\"Styling\", () => (\r\n    <Story>\r\n      <UseCase text=\"multiline = true\" usage=\"For really really long text\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => (\r\n            <View>\r\n              <Checkbox\r\n                text=\"We’re an App Design & Development Team. Experts in mobile & web technologies. We create beautiful, functional mobile apps and websites.\"\r\n                value={on}\r\n                multiline\r\n                onToggle={toggle}\r\n              />\r\n            </View>\r\n          )}\r\n        </Toggle>\r\n      </UseCase>\r\n      <UseCase text=\".style\" usage=\"Override the container style\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => (\r\n            <View>\r\n              <Checkbox\r\n                text=\"Hello there!\"\r\n                value={on}\r\n                style={{\r\n                  backgroundColor: \"purple\",\r\n                  marginLeft: 40,\r\n                  paddingVertical: 30,\r\n                  paddingLeft: 60,\r\n                }}\r\n                onToggle={toggle}\r\n              />\r\n            </View>\r\n          )}\r\n        </Toggle>\r\n      </UseCase>\r\n      <UseCase text=\".outlineStyle\" usage=\"Override the outline style\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => (\r\n            <View>\r\n              <Checkbox\r\n                text=\"Outline is the box frame\"\r\n                value={on}\r\n                outlineStyle={{\r\n                  borderColor: \"green\",\r\n                  borderRadius: 10,\r\n                  borderWidth: 4,\r\n                  width: 60,\r\n                  height: 20,\r\n                }}\r\n                onToggle={toggle}\r\n              />\r\n            </View>\r\n          )}\r\n        </Toggle>\r\n      </UseCase>\r\n      <UseCase text=\".fillStyle\" usage=\"Override the fill style\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => (\r\n            <View>\r\n              <Checkbox\r\n                text=\"Fill er up\"\r\n                value={on}\r\n                fillStyle={{ backgroundColor: \"red\", borderRadius: 8 }}\r\n                onToggle={toggle}\r\n              />\r\n            </View>\r\n          )}\r\n        </Toggle>\r\n      </UseCase>\r\n\r\n      <UseCase text=\"Array style\" usage=\"Use array styles\">\r\n        <Toggle initial={false}>\r\n          {({ on, toggle }) => (\r\n            <View>\r\n              <Checkbox\r\n                text=\"Check it twice\"\r\n                value={on}\r\n                onToggle={toggle}\r\n                style={arrayStyle}\r\n                outlineStyle={arrayOutlineStyle}\r\n                fillStyle={arrayFillStyle}\r\n              />\r\n            </View>\r\n          )}\r\n        </Toggle>\r\n      </UseCase>\r\n    </Story>\r\n  ))\r\n"]},"metadata":{},"sourceType":"script"}