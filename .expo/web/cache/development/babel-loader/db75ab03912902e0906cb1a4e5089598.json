{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar AnimatedValue = require('./nodes/AnimatedValue');\n\nvar NativeAnimatedHelper = require('./NativeAnimatedHelper');\n\nvar ReactNative = require('../../Renderer/shims/ReactNative');\n\nvar invariant = require('invariant');\n\nvar _require = require('./NativeAnimatedHelper'),\n    shouldUseNativeDriver = _require.shouldUseNativeDriver;\n\nfunction attachNativeEvent(viewRef, eventName, argMapping) {\n  var eventMappings = [];\n\n  var traverse = function traverse(value, path) {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag()\n      });\n    } else if (typeof value === 'object') {\n      for (var _key in value) {\n        traverse(value[_key], path.concat(_key));\n      }\n    }\n  };\n\n  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');\n  traverse(argMapping[0].nativeEvent, []);\n  var viewTag = ReactNative.findNodeHandle(viewRef);\n\n  if (viewTag != null) {\n    eventMappings.forEach(function (mapping) {\n      NativeAnimatedHelper.API.addAnimatedEventToView(viewTag, eventName, mapping);\n    });\n  }\n\n  return {\n    detach: function detach() {\n      if (viewTag != null) {\n        eventMappings.forEach(function (mapping) {\n          NativeAnimatedHelper.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);\n        });\n      }\n    }\n  };\n}\n\nfunction validateMapping(argMapping, args) {\n  var validate = function validate(recMapping, recEvt, key) {\n    if (recMapping instanceof AnimatedValue) {\n      invariant(typeof recEvt === 'number', 'Bad mapping of event key ' + key + ', should be number but got ' + typeof recEvt);\n      return;\n    }\n\n    if (typeof recEvt === 'number') {\n      invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');\n      return;\n    }\n\n    invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);\n    invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);\n\n    for (var mappingKey in recMapping) {\n      validate(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n    }\n  };\n\n  invariant(args.length >= argMapping.length, 'Event has less arguments than mapping');\n  argMapping.forEach(function (mapping, idx) {\n    validate(mapping, args[idx], 'arg' + idx);\n  });\n}\n\nvar AnimatedEvent = function () {\n  function AnimatedEvent(argMapping, config) {\n    _classCallCheck(this, AnimatedEvent);\n\n    this._listeners = [];\n    this._argMapping = argMapping;\n\n    if (config == null) {\n      console.warn('Animated.event now requires a second argument for options');\n      config = {\n        useNativeDriver: false\n      };\n    }\n\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n  }\n\n  _createClass(AnimatedEvent, [{\n    key: \"__addListener\",\n    value: function __addListener(callback) {\n      this._listeners.push(callback);\n    }\n  }, {\n    key: \"__removeListener\",\n    value: function __removeListener(callback) {\n      this._listeners = this._listeners.filter(function (listener) {\n        return listener !== callback;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach(viewRef, eventName) {\n      invariant(this.__isNative, 'Only native driven events need to be attached.');\n      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach(viewTag, eventName) {\n      invariant(this.__isNative, 'Only native driven events need to be detached.');\n      this._attachedEvent && this._attachedEvent.detach();\n    }\n  }, {\n    key: \"__getHandler\",\n    value: function __getHandler() {\n      var _this = this;\n\n      if (this.__isNative) {\n        if (__DEV__) {\n          var _validatedMapping = false;\n          return function () {\n            for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            if (!_validatedMapping) {\n              validateMapping(_this._argMapping, args);\n              _validatedMapping = true;\n            }\n\n            _this._callListeners.apply(_this, args);\n          };\n        } else {\n          return this._callListeners;\n        }\n      }\n\n      var validatedMapping = false;\n      return function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        if (__DEV__ && !validatedMapping) {\n          validateMapping(_this._argMapping, args);\n          validatedMapping = true;\n        }\n\n        var traverse = function traverse(recMapping, recEvt, key) {\n          if (recMapping instanceof AnimatedValue) {\n            if (typeof recEvt === 'number') {\n              recMapping.setValue(recEvt);\n            }\n          } else if (typeof recMapping === 'object') {\n            for (var mappingKey in recMapping) {\n              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n            }\n          }\n        };\n\n        _this._argMapping.forEach(function (mapping, idx) {\n          traverse(mapping, args[idx], 'arg' + idx);\n        });\n\n        _this._callListeners.apply(_this, args);\n      };\n    }\n  }, {\n    key: \"_callListeners\",\n    value: function _callListeners() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._listeners.forEach(function (listener) {\n        return listener.apply(void 0, args);\n      });\n    }\n  }]);\n\n  return AnimatedEvent;\n}();\n\nmodule.exports = {\n  AnimatedEvent: AnimatedEvent,\n  attachNativeEvent: attachNativeEvent\n};","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js"],"names":["AnimatedValue","require","NativeAnimatedHelper","ReactNative","invariant","shouldUseNativeDriver","attachNativeEvent","viewRef","eventName","argMapping","eventMappings","traverse","value","path","__makeNative","push","nativeEventPath","animatedValueTag","__getNativeTag","key","concat","nativeEvent","viewTag","findNodeHandle","forEach","mapping","API","addAnimatedEventToView","detach","removeAnimatedEventFromView","validateMapping","args","validate","recMapping","recEvt","mappingKey","length","idx","AnimatedEvent","config","_listeners","_argMapping","console","warn","useNativeDriver","listener","__addListener","_callListeners","bind","_attachedEvent","__isNative","callback","filter","__DEV__","validatedMapping","setValue","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst NativeAnimatedHelper = require('./NativeAnimatedHelper');\nconst ReactNative = require('../../Renderer/shims/ReactNative');\n\nconst invariant = require('invariant');\n\nconst {shouldUseNativeDriver} = require('./NativeAnimatedHelper');\n\nexport type Mapping = {[key: string]: Mapping, ...} | AnimatedValue;\nexport type EventConfig = {\n  listener?: ?Function,\n  useNativeDriver: boolean,\n};\n\nfunction attachNativeEvent(\n  viewRef: any,\n  eventName: string,\n  argMapping: $ReadOnlyArray<?Mapping>,\n): {detach: () => void} {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n\n  const traverse = (value, path) => {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag(),\n      });\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.',\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  traverse(argMapping[0].nativeEvent, []);\n\n  const viewTag = ReactNative.findNodeHandle(viewRef);\n  if (viewTag != null) {\n    eventMappings.forEach(mapping => {\n      NativeAnimatedHelper.API.addAnimatedEventToView(\n        viewTag,\n        eventName,\n        mapping,\n      );\n    });\n  }\n\n  return {\n    detach() {\n      if (viewTag != null) {\n        eventMappings.forEach(mapping => {\n          NativeAnimatedHelper.API.removeAnimatedEventFromView(\n            viewTag,\n            eventName,\n            mapping.animatedValueTag,\n          );\n        });\n      }\n    },\n  };\n}\n\nfunction validateMapping(argMapping, args) {\n  const validate = (recMapping, recEvt, key) => {\n    if (recMapping instanceof AnimatedValue) {\n      invariant(\n        typeof recEvt === 'number',\n        'Bad mapping of event key ' +\n          key +\n          ', should be number but got ' +\n          typeof recEvt,\n      );\n      return;\n    }\n    if (typeof recEvt === 'number') {\n      invariant(\n        recMapping instanceof AnimatedValue,\n        'Bad mapping of type ' +\n          typeof recMapping +\n          ' for key ' +\n          key +\n          ', event value must map to AnimatedValue',\n      );\n      return;\n    }\n    invariant(\n      typeof recMapping === 'object',\n      'Bad mapping of type ' + typeof recMapping + ' for key ' + key,\n    );\n    invariant(\n      typeof recEvt === 'object',\n      'Bad event of type ' + typeof recEvt + ' for key ' + key,\n    );\n    for (const mappingKey in recMapping) {\n      validate(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n    }\n  };\n\n  invariant(\n    args.length >= argMapping.length,\n    'Event has less arguments than mapping',\n  );\n  argMapping.forEach((mapping, idx) => {\n    validate(mapping, args[idx], 'arg' + idx);\n  });\n}\n\nclass AnimatedEvent {\n  _argMapping: $ReadOnlyArray<?Mapping>;\n  _listeners: Array<Function> = [];\n  _callListeners: Function;\n  _attachedEvent: ?{detach: () => void, ...};\n  __isNative: boolean;\n\n  constructor(argMapping: $ReadOnlyArray<?Mapping>, config: EventConfig) {\n    this._argMapping = argMapping;\n\n    if (config == null) {\n      console.warn('Animated.event now requires a second argument for options');\n      config = {useNativeDriver: false};\n    }\n\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n  }\n\n  __addListener(callback: Function): void {\n    this._listeners.push(callback);\n  }\n\n  __removeListener(callback: Function): void {\n    this._listeners = this._listeners.filter(listener => listener !== callback);\n  }\n\n  __attach(viewRef: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be attached.',\n    );\n\n    this._attachedEvent = attachNativeEvent(\n      viewRef,\n      eventName,\n      this._argMapping,\n    );\n  }\n\n  __detach(viewTag: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be detached.',\n    );\n\n    this._attachedEvent && this._attachedEvent.detach();\n  }\n\n  __getHandler(): any | ((...args: any) => void) {\n    if (this.__isNative) {\n      if (__DEV__) {\n        let validatedMapping = false;\n        return (...args: any) => {\n          if (!validatedMapping) {\n            validateMapping(this._argMapping, args);\n            validatedMapping = true;\n          }\n          this._callListeners(...args);\n        };\n      } else {\n        return this._callListeners;\n      }\n    }\n\n    let validatedMapping = false;\n    return (...args: any) => {\n      if (__DEV__ && !validatedMapping) {\n        validateMapping(this._argMapping, args);\n        validatedMapping = true;\n      }\n\n      const traverse = (recMapping, recEvt, key) => {\n        if (recMapping instanceof AnimatedValue) {\n          if (typeof recEvt === 'number') {\n            recMapping.setValue(recEvt);\n          }\n        } else if (typeof recMapping === 'object') {\n          for (const mappingKey in recMapping) {\n            /* $FlowFixMe(>=0.120.0) This comment suppresses an error found\n             * when Flow v0.120 was deployed. To see the error, delete this\n             * comment and run Flow. */\n            traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n          }\n        }\n      };\n      this._argMapping.forEach((mapping, idx) => {\n        traverse(mapping, args[idx], 'arg' + idx);\n      });\n\n      this._callListeners(...args);\n    };\n  }\n\n  _callListeners(...args: any) {\n    this._listeners.forEach(listener => listener(...args));\n  }\n}\n\nmodule.exports = {AnimatedEvent, attachNativeEvent};\n"]},"metadata":{},"sourceType":"script"}