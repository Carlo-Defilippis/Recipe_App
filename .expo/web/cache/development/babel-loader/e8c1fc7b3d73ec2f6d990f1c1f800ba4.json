{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar parseHermesStack = require('./parseHermesStack');\n\nfunction convertHermesStack(stack) {\n  var frames = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(stack.entries), _step; !(_step = _iterator()).done;) {\n    var entry = _step.value;\n\n    if (entry.type !== 'FRAME') {\n      continue;\n    }\n\n    var location = entry.location,\n        functionName = entry.functionName;\n\n    if (location.type === 'NATIVE') {\n      continue;\n    }\n\n    frames.push({\n      methodName: functionName,\n      file: location.sourceUrl,\n      lineNumber: location.line1Based,\n      column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n    });\n  }\n\n  return frames;\n}\n\nfunction parseErrorStack(e) {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  var stacktraceParser = require('stacktrace-parser');\n\n  var stack = Array.isArray(e.stack) ? e.stack : global.HermesInternal ? convertHermesStack(parseHermesStack(e.stack)) : stacktraceParser.parse(e.stack).map(function (frame) {\n    return _objectSpread(_objectSpread({}, frame), {}, {\n      column: frame.column != null ? frame.column - 1 : null\n    });\n  });\n  return stack;\n}\n\nmodule.exports = parseErrorStack;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js"],"names":["parseHermesStack","require","convertHermesStack","stack","frames","entries","entry","type","location","functionName","push","methodName","file","sourceUrl","lineNumber","line1Based","column","column1Based","virtualOffset0Based","parseErrorStack","e","stacktraceParser","Array","isArray","global","HermesInternal","parse","map","frame","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AAWA,SAASC,kBAAT,CAA4BC,KAA5B,EAAyE;AACvE,MAAMC,MAAM,GAAG,EAAf;;AACA,uDAAoBD,KAAK,CAACE,OAA1B,wCAAmC;AAAA,QAAxBC,KAAwB;;AACjC,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B;AACD;;AAHgC,QAI1BC,QAJ0B,GAIAF,KAJA,CAI1BE,QAJ0B;AAAA,QAIhBC,YAJgB,GAIAH,KAJA,CAIhBG,YAJgB;;AAKjC,QAAID,QAAQ,CAACD,IAAT,KAAkB,QAAtB,EAAgC;AAC9B;AACD;;AACDH,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,MAAAA,UAAU,EAAEF,YADF;AAEVG,MAAAA,IAAI,EAAEJ,QAAQ,CAACK,SAFL;AAGVC,MAAAA,UAAU,EAAEN,QAAQ,CAACO,UAHX;AAIVC,MAAAA,MAAM,EACJR,QAAQ,CAACD,IAAT,KAAkB,QAAlB,GACIC,QAAQ,CAACS,YAAT,GAAwB,CAD5B,GAEIT,QAAQ,CAACU;AAPL,KAAZ;AASD;;AACD,SAAOd,MAAP;AACD;;AAED,SAASe,eAAT,CAAyBC,CAAzB,EAA8D;AAC5D,MAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACjB,KAAb,EAAoB;AAClB,WAAO,EAAP;AACD;;AAED,MAAMkB,gBAAgB,GAAGpB,OAAO,CAAC,mBAAD,CAAhC;;AACA,MAAME,KAAK,GAAGmB,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACjB,KAAhB,IACViB,CAAC,CAACjB,KADQ,GAEVqB,MAAM,CAACC,cAAP,GACAvB,kBAAkB,CAACF,gBAAgB,CAACoB,CAAC,CAACjB,KAAH,CAAjB,CADlB,GAEAkB,gBAAgB,CAACK,KAAjB,CAAuBN,CAAC,CAACjB,KAAzB,EAAgCwB,GAAhC,CAAoC,UAAAC,KAAK;AAAA,2CACpCA,KADoC;AAEvCZ,MAAAA,MAAM,EAAEY,KAAK,CAACZ,MAAN,IAAgB,IAAhB,GAAuBY,KAAK,CAACZ,MAAN,GAAe,CAAtC,GAA0C;AAFX;AAAA,GAAzC,CAJJ;AASA,SAAOb,KAAP;AACD;;AAED0B,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {StackFrame} from '../NativeExceptionsManager';\nimport type {HermesParsedStack} from './parseHermesStack';\n\nconst parseHermesStack = require('./parseHermesStack');\n\nexport type ExtendedError = Error & {\n  jsEngine?: string,\n  preventSymbolication?: boolean,\n  componentStack?: string,\n  forceRedbox?: boolean,\n  isComponentError?: boolean,\n  ...\n};\n\nfunction convertHermesStack(stack: HermesParsedStack): Array<StackFrame> {\n  const frames = [];\n  for (const entry of stack.entries) {\n    if (entry.type !== 'FRAME') {\n      continue;\n    }\n    const {location, functionName} = entry;\n    if (location.type === 'NATIVE') {\n      continue;\n    }\n    frames.push({\n      methodName: functionName,\n      file: location.sourceUrl,\n      lineNumber: location.line1Based,\n      column:\n        location.type === 'SOURCE'\n          ? location.column1Based - 1\n          : location.virtualOffset0Based,\n    });\n  }\n  return frames;\n}\n\nfunction parseErrorStack(e: ExtendedError): Array<StackFrame> {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  const stacktraceParser = require('stacktrace-parser');\n  const stack = Array.isArray(e.stack)\n    ? e.stack\n    : global.HermesInternal\n    ? convertHermesStack(parseHermesStack(e.stack))\n    : stacktraceParser.parse(e.stack).map(frame => ({\n        ...frame,\n        column: frame.column != null ? frame.column - 1 : null,\n      }));\n\n  return stack;\n}\n\nmodule.exports = parseErrorStack;\n"]},"metadata":{},"sourceType":"script"}