{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Animation = require('./Animation');\n\nvar _require = require('../NativeAnimatedHelper'),\n    shouldUseNativeDriver = _require.shouldUseNativeDriver;\n\nvar DecayAnimation = function (_Animation) {\n  _inherits(DecayAnimation, _Animation);\n\n  var _super = _createSuper(DecayAnimation);\n\n  function DecayAnimation(config) {\n    var _config$deceleration, _config$isInteraction, _config$iterations;\n\n    var _this;\n\n    _classCallCheck(this, DecayAnimation);\n\n    _this = _super.call(this);\n    _this._deceleration = (_config$deceleration = config.deceleration) != null ? _config$deceleration : 0.998;\n    _this._velocity = config.velocity;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) != null ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) != null ? _config$iterations : 1;\n    return _this;\n  }\n\n  _createClass(DecayAnimation, [{\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      return {\n        type: 'decay',\n        deceleration: this._deceleration,\n        velocity: this._velocity,\n        iterations: this.__iterations\n      };\n    }\n  }, {\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n      this.__active = true;\n      this._lastValue = fromValue;\n      this._fromValue = fromValue;\n      this._onUpdate = onUpdate;\n      this.__onEnd = onEnd;\n      this._startTime = Date.now();\n\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate() {\n      var now = Date.now();\n      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));\n\n      this._onUpdate(value);\n\n      if (Math.abs(this._lastValue - value) < 0.1) {\n        this.__debouncedOnEnd({\n          finished: true\n        });\n\n        return;\n      }\n\n      this._lastValue = value;\n\n      if (this.__active) {\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      _get(_getPrototypeOf(DecayAnimation.prototype), \"stop\", this).call(this);\n\n      this.__active = false;\n      global.cancelAnimationFrame(this._animationFrame);\n\n      this.__debouncedOnEnd({\n        finished: false\n      });\n    }\n  }]);\n\n  return DecayAnimation;\n}(Animation);\n\nmodule.exports = DecayAnimation;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Animated/src/animations/DecayAnimation.js"],"names":["Animation","require","shouldUseNativeDriver","DecayAnimation","config","_deceleration","deceleration","_velocity","velocity","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","type","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_lastValue","_fromValue","_onUpdate","__onEnd","_startTime","Date","now","__startNativeAnimation","_animationFrame","requestAnimationFrame","bind","value","Math","exp","abs","__debouncedOnEnd","finished","global","cancelAnimationFrame","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;eAEgCA,OAAO,CAAC,yBAAD,C;IAAhCC,qB,YAAAA,qB;;IAuBDC,c;;;;;AAUJ,0BAAYC,MAAZ,EAAgD;AAAA;;AAAA;;AAAA;;AAC9C;AACA,UAAKC,aAAL,2BAAqBD,MAAM,CAACE,YAA5B,mCAA4C,KAA5C;AACA,UAAKC,SAAL,GAAiBH,MAAM,CAACI,QAAxB;AACA,UAAKC,gBAAL,GAAwBP,qBAAqB,CAACE,MAAD,CAA7C;AACA,UAAKM,eAAL,4BAAuBN,MAAM,CAACO,aAA9B,oCAA+C,CAAC,MAAKF,gBAArD;AACA,UAAKG,YAAL,yBAAoBR,MAAM,CAACS,UAA3B,iCAAyC,CAAzC;AAN8C;AAO/C;;;;iDAOE;AACD,aAAO;AACLC,QAAAA,IAAI,EAAE,OADD;AAELR,QAAAA,YAAY,EAAE,KAAKD,aAFd;AAGLG,QAAAA,QAAQ,EAAE,KAAKD,SAHV;AAILM,QAAAA,UAAU,EAAE,KAAKD;AAJZ,OAAP;AAMD;;;0BAGCG,S,EACAC,Q,EACAC,K,EACAC,iB,EACAC,a,EACM;AACN,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,UAAL,GAAkBN,SAAlB;AACA,WAAKO,UAAL,GAAkBP,SAAlB;AACA,WAAKQ,SAAL,GAAiBP,QAAjB;AACA,WAAKQ,OAAL,GAAeP,KAAf;AACA,WAAKQ,UAAL,GAAkBC,IAAI,CAACC,GAAL,EAAlB;;AACA,UAAI,KAAKlB,gBAAT,EAA2B;AACzB,aAAKmB,sBAAL,CAA4BT,aAA5B;AACD,OAFD,MAEO;AACL,aAAKU,eAAL,GAAuBC,qBAAqB,CAAC,KAAKd,QAAL,CAAce,IAAd,CAAmB,IAAnB,CAAD,CAA5C;AACD;AACF;;;+BAEgB;AACf,UAAMJ,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AAEA,UAAMK,KAAK,GACT,KAAKV,UAAL,GACC,KAAKf,SAAL,IAAkB,IAAI,KAAKF,aAA3B,CAAD,IACG,IAAI4B,IAAI,CAACC,GAAL,CAAS,EAAE,IAAI,KAAK7B,aAAX,KAA6BsB,GAAG,GAAG,KAAKF,UAAxC,CAAT,CADP,CAFF;;AAKA,WAAKF,SAAL,CAAeS,KAAf;;AAEA,UAAIC,IAAI,CAACE,GAAL,CAAS,KAAKd,UAAL,GAAkBW,KAA3B,IAAoC,GAAxC,EAA6C;AAC3C,aAAKI,gBAAL,CAAsB;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAtB;;AACA;AACD;;AAED,WAAKhB,UAAL,GAAkBW,KAAlB;;AACA,UAAI,KAAKZ,QAAT,EAAmB;AACjB,aAAKS,eAAL,GAAuBC,qBAAqB,CAAC,KAAKd,QAAL,CAAce,IAAd,CAAmB,IAAnB,CAAD,CAA5C;AACD;AACF;;;2BAEY;AACX;;AACA,WAAKX,QAAL,GAAgB,KAAhB;AACAkB,MAAAA,MAAM,CAACC,oBAAP,CAA4B,KAAKV,eAAjC;;AACA,WAAKO,gBAAL,CAAsB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAtB;AACD;;;;EA/E0BrC,S;;AAkF7BwC,MAAM,CAACC,OAAP,GAAiBtC,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Animation = require('./Animation');\n\nconst {shouldUseNativeDriver} = require('../NativeAnimatedHelper');\n\nimport type AnimatedValue from '../nodes/AnimatedValue';\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nexport type DecayAnimationConfig = {\n  ...AnimationConfig,\n  velocity:\n    | number\n    | {\n        x: number,\n        y: number,\n        ...\n      },\n  deceleration?: number,\n};\n\nexport type DecayAnimationConfigSingle = {\n  ...AnimationConfig,\n  velocity: number,\n  deceleration?: number,\n};\n\nclass DecayAnimation extends Animation {\n  _startTime: number;\n  _lastValue: number;\n  _fromValue: number;\n  _deceleration: number;\n  _velocity: number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _useNativeDriver: boolean;\n\n  constructor(config: DecayAnimationConfigSingle) {\n    super();\n    this._deceleration = config.deceleration ?? 0.998;\n    this._velocity = config.velocity;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction = config.isInteraction ?? !this._useNativeDriver;\n    this.__iterations = config.iterations ?? 1;\n  }\n\n  __getNativeAnimationConfig(): {|\n    deceleration: number,\n    iterations: number,\n    type: $TEMPORARY$string<'decay'>,\n    velocity: number,\n  |} {\n    return {\n      type: 'decay',\n      deceleration: this._deceleration,\n      velocity: this._velocity,\n      iterations: this.__iterations,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._lastValue = fromValue;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._startTime = Date.now();\n    if (this._useNativeDriver) {\n      this.__startNativeAnimation(animatedValue);\n    } else {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  onUpdate(): void {\n    const now = Date.now();\n\n    const value =\n      this._fromValue +\n      (this._velocity / (1 - this._deceleration)) *\n        (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));\n\n    this._onUpdate(value);\n\n    if (Math.abs(this._lastValue - value) < 0.1) {\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n\n    this._lastValue = value;\n    if (this.__active) {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n\nmodule.exports = DecayAnimation;\n"]},"metadata":{},"sourceType":"script"}