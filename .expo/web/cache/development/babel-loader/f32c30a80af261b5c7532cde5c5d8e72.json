{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.presets = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _theme = require(\"../../theme\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar BASE = {\n  fontFamily: _theme.typography.primary,\n  color: _theme.color.text,\n  fontSize: 15\n};\nvar presets = {\n  default: BASE,\n  bold: _objectSpread(_objectSpread({}, BASE), {}, {\n    fontWeight: \"bold\"\n  }),\n  header: _objectSpread(_objectSpread({}, BASE), {}, {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  }),\n  fieldLabel: _objectSpread(_objectSpread({}, BASE), {}, {\n    fontSize: 13,\n    color: _theme.color.dim\n  }),\n  secondary: _objectSpread(_objectSpread({}, BASE), {}, {\n    fontSize: 9,\n    color: _theme.color.dim\n  })\n};\nexports.presets = presets;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/app/components/text/text.presets.ts"],"names":["BASE","fontFamily","typography","primary","color","text","fontSize","presets","default","bold","fontWeight","header","fieldLabel","dim","secondary"],"mappings":";;;;;;;;;AACA;;;;;;AAKA,IAAMA,IAAe,GAAG;AACtBC,EAAAA,UAAU,EAAEC,kBAAWC,OADD;AAEtBC,EAAAA,KAAK,EAAEA,aAAMC,IAFS;AAGtBC,EAAAA,QAAQ,EAAE;AAHY,CAAxB;AAWO,IAAMC,OAAO,GAAG;AAIrBC,EAAAA,OAAO,EAAER,IAJY;AASrBS,EAAAA,IAAI,kCAAOT,IAAP;AAAaU,IAAAA,UAAU,EAAE;AAAzB,IATiB;AAcrBC,EAAAA,MAAM,kCAAOX,IAAP;AAAaM,IAAAA,QAAQ,EAAE,EAAvB;AAA2BI,IAAAA,UAAU,EAAE;AAAvC,IAde;AAmBrBE,EAAAA,UAAU,kCAAOZ,IAAP;AAAaM,IAAAA,QAAQ,EAAE,EAAvB;AAA2BF,IAAAA,KAAK,EAAEA,aAAMS;AAAxC,IAnBW;AAwBrBC,EAAAA,SAAS,kCAAOd,IAAP;AAAaM,IAAAA,QAAQ,EAAE,CAAvB;AAA0BF,IAAAA,KAAK,EAAEA,aAAMS;AAAvC;AAxBY,CAAhB","sourcesContent":["import { TextStyle } from \"react-native\"\r\nimport { color, typography } from \"../../theme\"\r\n\r\n/**\r\n * All text will start off looking like this.\r\n */\r\nconst BASE: TextStyle = {\r\n  fontFamily: typography.primary,\r\n  color: color.text,\r\n  fontSize: 15,\r\n}\r\n\r\n/**\r\n * All the variations of text styling within the app.\r\n *\r\n * You want to customize these to whatever you need in your app.\r\n */\r\nexport const presets = {\r\n  /**\r\n   * The default text styles.\r\n   */\r\n  default: BASE,\r\n\r\n  /**\r\n   * A bold version of the default text.\r\n   */\r\n  bold: { ...BASE, fontWeight: \"bold\" } as TextStyle,\r\n\r\n  /**\r\n   * Large headers.\r\n   */\r\n  header: { ...BASE, fontSize: 24, fontWeight: \"bold\" } as TextStyle,\r\n\r\n  /**\r\n   * Field labels that appear on forms above the inputs.\r\n   */\r\n  fieldLabel: { ...BASE, fontSize: 13, color: color.dim } as TextStyle,\r\n\r\n  /**\r\n   * A smaller piece of secondard information.\r\n   */\r\n  secondary: { ...BASE, fontSize: 9, color: color.dim } as TextStyle,\r\n}\r\n\r\n/**\r\n * A list of preset names.\r\n */\r\nexport type TextPresets = keyof typeof presets\r\n"]},"metadata":{},"sourceType":"script"}