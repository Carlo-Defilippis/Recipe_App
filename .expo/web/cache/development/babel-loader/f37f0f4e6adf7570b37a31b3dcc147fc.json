{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _NativeTVNavigationEventEmitter = _interopRequireDefault(require(\"./NativeTVNavigationEventEmitter\"));\n\nvar Platform = require('../../Utilities/Platform');\n\nvar NativeEventEmitter = require('../../EventEmitter/NativeEventEmitter');\n\nvar TVEventHandler = function () {\n  function TVEventHandler() {\n    (0, _classCallCheck2.default)(this, TVEventHandler);\n    this.__nativeTVNavigationEventListener = null;\n    this.__nativeTVNavigationEventEmitter = null;\n  }\n\n  (0, _createClass2.default)(TVEventHandler, [{\n    key: \"enable\",\n    value: function enable(component, callback) {\n      if (Platform.OS === 'ios' && !_NativeTVNavigationEventEmitter.default) {\n        return;\n      }\n\n      this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);\n      this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {\n        if (callback) {\n          callback(component, data);\n        }\n      });\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (this.__nativeTVNavigationEventListener) {\n        this.__nativeTVNavigationEventListener.remove();\n\n        delete this.__nativeTVNavigationEventListener;\n      }\n\n      if (this.__nativeTVNavigationEventEmitter) {\n        delete this.__nativeTVNavigationEventEmitter;\n      }\n    }\n  }]);\n  return TVEventHandler;\n}();\n\nmodule.exports = TVEventHandler;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Components/AppleTV/TVEventHandler.js"],"names":["Platform","require","NativeEventEmitter","TVEventHandler","__nativeTVNavigationEventListener","__nativeTVNavigationEventEmitter","component","callback","OS","NativeTVNavigationEventEmitter","addListener","data","remove","module","exports"],"mappings":"AAUA;;;;;;;;AAKA;;AAHA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,uCAAD,CAAlC;;IAKME,c;;;SACJC,iC,GAA0D,I;SAC1DC,gC,GAAwD,I;;;;;2BAEjDC,S,EAAiBC,Q,EAA0B;AAChD,UAAIP,QAAQ,CAACQ,EAAT,KAAgB,KAAhB,IAAyB,CAACC,uCAA9B,EAA8D;AAC5D;AACD;;AAED,WAAKJ,gCAAL,GAAwC,IAAIH,kBAAJ,CACtCO,uCADsC,CAAxC;AAGA,WAAKL,iCAAL,GAAyC,KAAKC,gCAAL,CAAsCK,WAAtC,CACvC,cADuC,EAEvC,UAAAC,IAAI,EAAI;AACN,YAAIJ,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACD,SAAD,EAAYK,IAAZ,CAAR;AACD;AACF,OANsC,CAAzC;AAQD;;;8BAEe;AACd,UAAI,KAAKP,iCAAT,EAA4C;AAC1C,aAAKA,iCAAL,CAAuCQ,MAAvC;;AACA,eAAO,KAAKR,iCAAZ;AACD;;AACD,UAAI,KAAKC,gCAAT,EAA2C;AACzC,eAAO,KAAKA,gCAAZ;AACD;AACF;;;;;AAGHQ,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Platform = require('../../Utilities/Platform');\nconst NativeEventEmitter = require('../../EventEmitter/NativeEventEmitter');\n\nimport NativeTVNavigationEventEmitter from './NativeTVNavigationEventEmitter';\nimport type EmitterSubscription from '../../vendor/emitter/EmitterSubscription';\n\nclass TVEventHandler {\n  __nativeTVNavigationEventListener: ?EmitterSubscription = null;\n  __nativeTVNavigationEventEmitter: ?NativeEventEmitter = null;\n\n  enable(component: ?any, callback: Function): void {\n    if (Platform.OS === 'ios' && !NativeTVNavigationEventEmitter) {\n      return;\n    }\n\n    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(\n      NativeTVNavigationEventEmitter,\n    );\n    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener(\n      'onHWKeyEvent',\n      data => {\n        if (callback) {\n          callback(component, data);\n        }\n      },\n    );\n  }\n\n  disable(): void {\n    if (this.__nativeTVNavigationEventListener) {\n      this.__nativeTVNavigationEventListener.remove();\n      delete this.__nativeTVNavigationEventListener;\n    }\n    if (this.__nativeTVNavigationEventEmitter) {\n      delete this.__nativeTVNavigationEventEmitter;\n    }\n  }\n}\n\nmodule.exports = TVEventHandler;\n"]},"metadata":{},"sourceType":"script"}