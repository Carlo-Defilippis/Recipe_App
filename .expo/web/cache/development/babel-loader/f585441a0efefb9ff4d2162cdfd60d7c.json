{"ast":null,"code":"'use strict';\n\nvar I18nManager = require('../ReactNative/I18nManager');\n\nfunction resolveBoxStyle(prefix, style) {\n  var hasParts = false;\n  var result = {\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0\n  };\n  var styleForAll = style[prefix];\n\n  if (styleForAll != null) {\n    for (var _i = 0, _Object$keys = Object.keys(result); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      result[key] = styleForAll;\n    }\n\n    hasParts = true;\n  }\n\n  var styleForHorizontal = style[prefix + 'Horizontal'];\n\n  if (styleForHorizontal != null) {\n    result.left = styleForHorizontal;\n    result.right = styleForHorizontal;\n    hasParts = true;\n  } else {\n    var styleForLeft = style[prefix + 'Left'];\n\n    if (styleForLeft != null) {\n      result.left = styleForLeft;\n      hasParts = true;\n    }\n\n    var styleForRight = style[prefix + 'Right'];\n\n    if (styleForRight != null) {\n      result.right = styleForRight;\n      hasParts = true;\n    }\n\n    var styleForEnd = style[prefix + 'End'];\n\n    if (styleForEnd != null) {\n      var constants = I18nManager.getConstants();\n\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n        result.left = styleForEnd;\n      } else {\n        result.right = styleForEnd;\n      }\n\n      hasParts = true;\n    }\n\n    var styleForStart = style[prefix + 'Start'];\n\n    if (styleForStart != null) {\n      var _constants = I18nManager.getConstants();\n\n      if (_constants.isRTL && _constants.doLeftAndRightSwapInRTL) {\n        result.right = styleForStart;\n      } else {\n        result.left = styleForStart;\n      }\n\n      hasParts = true;\n    }\n  }\n\n  var styleForVertical = style[prefix + 'Vertical'];\n\n  if (styleForVertical != null) {\n    result.bottom = styleForVertical;\n    result.top = styleForVertical;\n    hasParts = true;\n  } else {\n    var styleForBottom = style[prefix + 'Bottom'];\n\n    if (styleForBottom != null) {\n      result.bottom = styleForBottom;\n      hasParts = true;\n    }\n\n    var styleForTop = style[prefix + 'Top'];\n\n    if (styleForTop != null) {\n      result.top = styleForTop;\n      hasParts = true;\n    }\n  }\n\n  return hasParts ? result : null;\n}\n\nmodule.exports = resolveBoxStyle;","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Inspector/resolveBoxStyle.js"],"names":["I18nManager","require","resolveBoxStyle","prefix","style","hasParts","result","bottom","left","right","top","styleForAll","Object","keys","key","styleForHorizontal","styleForLeft","styleForRight","styleForEnd","constants","getConstants","isRTL","doLeftAndRightSwapInRTL","styleForStart","styleForVertical","styleForBottom","styleForTop","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst I18nManager = require('../ReactNative/I18nManager');\n\n/**\n * Resolve a style property into its component parts.\n *\n * For example:\n *\n *   > resolveProperties('margin', {margin: 5, marginBottom: 10})\n *   {top: 5, left: 5, right: 5, bottom: 10}\n *\n * If no parts exist, this returns null.\n */\nfunction resolveBoxStyle(\n  prefix: string,\n  style: Object,\n): ?$ReadOnly<{|\n  bottom: number,\n  left: number,\n  right: number,\n  top: number,\n|}> {\n  let hasParts = false;\n  const result = {\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n  };\n\n  // TODO: Fix issues with multiple properties affecting the same side.\n\n  const styleForAll = style[prefix];\n  if (styleForAll != null) {\n    for (const key of Object.keys(result)) {\n      result[key] = styleForAll;\n    }\n    hasParts = true;\n  }\n\n  const styleForHorizontal = style[prefix + 'Horizontal'];\n  if (styleForHorizontal != null) {\n    result.left = styleForHorizontal;\n    result.right = styleForHorizontal;\n    hasParts = true;\n  } else {\n    const styleForLeft = style[prefix + 'Left'];\n    if (styleForLeft != null) {\n      result.left = styleForLeft;\n      hasParts = true;\n    }\n\n    const styleForRight = style[prefix + 'Right'];\n    if (styleForRight != null) {\n      result.right = styleForRight;\n      hasParts = true;\n    }\n\n    const styleForEnd = style[prefix + 'End'];\n    if (styleForEnd != null) {\n      const constants = I18nManager.getConstants();\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n        result.left = styleForEnd;\n      } else {\n        result.right = styleForEnd;\n      }\n      hasParts = true;\n    }\n    const styleForStart = style[prefix + 'Start'];\n    if (styleForStart != null) {\n      const constants = I18nManager.getConstants();\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n        result.right = styleForStart;\n      } else {\n        result.left = styleForStart;\n      }\n      hasParts = true;\n    }\n  }\n\n  const styleForVertical = style[prefix + 'Vertical'];\n  if (styleForVertical != null) {\n    result.bottom = styleForVertical;\n    result.top = styleForVertical;\n    hasParts = true;\n  } else {\n    const styleForBottom = style[prefix + 'Bottom'];\n    if (styleForBottom != null) {\n      result.bottom = styleForBottom;\n      hasParts = true;\n    }\n\n    const styleForTop = style[prefix + 'Top'];\n    if (styleForTop != null) {\n      result.top = styleForTop;\n      hasParts = true;\n    }\n  }\n\n  return hasParts ? result : null;\n}\n\nmodule.exports = resolveBoxStyle;\n"]},"metadata":{},"sourceType":"script"}