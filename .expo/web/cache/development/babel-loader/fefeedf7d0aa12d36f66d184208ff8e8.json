{"ast":null,"code":"'use strict';\n\nvar start = Date.now();\n\nrequire('./setUpGlobals');\n\nrequire('./setUpPerformance');\n\nrequire('./setUpSystrace');\n\nrequire('./setUpErrorHandling');\n\nrequire('./polyfillPromise');\n\nrequire('./setUpRegeneratorRuntime');\n\nrequire('./setUpTimers');\n\nrequire('./setUpXHR');\n\nrequire('./setUpAlert');\n\nrequire('./setUpNavigator');\n\nrequire('./setUpBatchedBridge');\n\nrequire('./setUpSegmentFetcher');\n\nif (__DEV__) {\n  require('./checkNativeVersion');\n\n  require('./setUpDeveloperTools');\n}\n\nvar GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\n\nGlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));\nGlobalPerformanceLogger.markPoint('initializeCore_end');","map":{"version":3,"sources":["C:/Users/na2tt/Desktop/homework/Recipe_App/node_modules/react-native/Libraries/Core/InitializeCore.js"],"names":["start","Date","now","require","__DEV__","GlobalPerformanceLogger","markPoint","currentTimestamp"],"mappings":"AA0BA;;AAEA,IAAMA,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;;AAEAC,OAAO,CAAC,gBAAD,CAAP;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACAA,OAAO,CAAC,iBAAD,CAAP;;AACAA,OAAO,CAAC,sBAAD,CAAP;;AACAA,OAAO,CAAC,mBAAD,CAAP;;AACAA,OAAO,CAAC,2BAAD,CAAP;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACAA,OAAO,CAAC,YAAD,CAAP;;AACAA,OAAO,CAAC,cAAD,CAAP;;AACAA,OAAO,CAAC,kBAAD,CAAP;;AACAA,OAAO,CAAC,sBAAD,CAAP;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACA,IAAIC,OAAJ,EAAa;AACXD,EAAAA,OAAO,CAAC,sBAAD,CAAP;;AACAA,EAAAA,OAAO,CAAC,uBAAD,CAAP;AACD;;AAED,IAAME,uBAAuB,GAAGF,OAAO,CAAC,sCAAD,CAAvC;;AAIAE,uBAAuB,CAACC,SAAxB,CACE,sBADF,EAEED,uBAAuB,CAACE,gBAAxB,MAA8CN,IAAI,CAACC,GAAL,KAAaF,KAA3D,CAFF;AAIAK,uBAAuB,CAACC,SAAxB,CAAkC,oBAAlC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/* globals window: true */\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n\n'use strict';\n\nconst start = Date.now();\n\nrequire('./setUpGlobals');\nrequire('./setUpPerformance');\nrequire('./setUpSystrace');\nrequire('./setUpErrorHandling');\nrequire('./polyfillPromise');\nrequire('./setUpRegeneratorRuntime');\nrequire('./setUpTimers');\nrequire('./setUpXHR');\nrequire('./setUpAlert');\nrequire('./setUpNavigator');\nrequire('./setUpBatchedBridge');\nrequire('./setUpSegmentFetcher');\nif (__DEV__) {\n  require('./checkNativeVersion');\n  require('./setUpDeveloperTools');\n}\n\nconst GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\n// We could just call GlobalPerformanceLogger.markPoint at the top of the file,\n// but then we'd be excluding the time it took to require the logger.\n// Instead, we just use Date.now and backdate the timestamp.\nGlobalPerformanceLogger.markPoint(\n  'initializeCore_start',\n  GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start),\n);\nGlobalPerformanceLogger.markPoint('initializeCore_end');\n"]},"metadata":{},"sourceType":"script"}